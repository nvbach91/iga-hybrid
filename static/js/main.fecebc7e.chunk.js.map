{"version":3,"sources":["components/Navigator.js","sparql.js","network.js","utils.js","components/VirtualizedTable.js","components/FragmentsTable.js","components/FragmentInstancesTable.js","components/AnalyzerPage.js","components/PrefixesTable.js","components/PrefixesPage.js","components/Header.js","components/Paperbase.js","components/App.js","serviceWorker.js","index.js"],"names":["categories","id","children","icon","react_default","a","createElement","SettingsInputComponent_default","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","&:hover,&:focus","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Object","objectWithoutProperties","Drawer","assign","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","Home_default","ListItemText","primary","map","_ref","Fragment","key","_ref2","childId","button","Divider","SPARQL_ENDPOINT_URL","prefixes","vann","voaf","rdfs","owl","skos","rdf","PREFIXES","keys","prefix","concat","join","getQueryFragmentInstancesCount","fragment","p","value","s","o","startsWith","getQueryFragmentInstances","getQueryConnectedSchemas","iri","axiosConfig","headers","accept","accept-language","content-type","fetchIris","payload","axios","post","createIriLink","test","Link","href","target","rel","window","reversePrefixes","i","length","slice","shortenIri","createLink","MuiVirtualizedTable","getRowClassName","index","_this$props","_this","onRowClick","tableRow","flexContainer","defineProperty","tableRowHover","cellRenderer","cellData","columnIndex","_this$props2","columns","rowHeight","TableCell","component","tableCell","noClick","style","height","align","numeric","headerRenderer","_ref3","label","_this$props3","headerHeight","_this2","this","_this$props4","tableProps","es","_ref4","width","size","rowClassName","_ref5","dataKey","headerProps","objectSpread","React","PureComponent","defaultProps","display","alignItems","boxSizing","cursor","&:hover","grey","flex","tableHeadStyle","position","top","fontWeight","head","headLast","fragmentButton","padding","justifyContent","fragments","showInstances","showOnlyFullFragments","ontologySelected","mRows","filter","_fragments$key","_fragments$key2","CircularProgress","Button","onClick","Visibility_default","Paper","VirtualizedTable","rowCount","rowGetter","flexGrow","Typography","head1","head2","fragmentInstancesLoading","fragmentInstances","classFragment","fi","selectStyles","option","styles","data","isDisabled","isFocused","isSelected","textAlign","AnalyzerPage","state","selectedOption","selectOptions","loading","sparqlPreview","localStorage","getItem","componentDidMount","then","resp","iris","results","bindings","binding","vocabURI","vocabLabel","nClass","nInd","setState","handleSelectOptionChange","fetchConnectedSchemas","handleInputChange","name","e","checked","setItem","forEach","sd","od","uuid","uuidv4","fetchFragmentInstances","fragmentKeys","fragmentKeyGroups","chunk","bluebird","each","fkg","counts","delay","n","newFragments","countKey","showSparqlPreview","query","_this$state$fragments","closeSparqlModal","closeInstancesModal","render","controls","FormControlLabel","control","Switch","onChange","trim","paper","AppBar","searchBar","elevation","Toolbar","Grid","container","Search_default","block","FormControl","formControl","react_select_browser_esm","inputId","TextFieldProps","placeholder","options","submitButton","submitButtonContent","Refresh_default","root","components_FragmentsTable","Dialog","onClose","open","fullWidth","maxWidth","DialogTitle","dialogTitle","components_FragmentInstancesTable","lib_default","readOnly","codeBlock","defaultValue","Component","margin","borderBottom","border","PrefixesTable","rows","PrefixesPage","searchValue","_this$setState","toLowerCase","includes","TextField","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","link","textDecoration","borderColor","onDrawerToggle","onTabSwitch","tabIndex","Hidden","smUp","IconButton","aria-label","Menu_default","xs","Tooltip","title","Notifications_default","Avatar","avatar","src","alt","Help_default","Tabs","textColor","Tab","createMuiTheme","typography","h5","letterSpacing","light","main","dark","shape","borderRadius","overrides","MuiDrawer","MuiButton","textTransform","contained","&:active","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","MuiTab","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","& svg","MuiAvatar","disableRipple","mixins","toolbar","minHeight","drawer","flexShrink","appAnalyzerPage","flexDirection","mainAnalyzerPage","background","Paperbase","mobileOpen","handleDrawerToggle","handleTabSwitch","renderAnalyzerPage","components_AnalyzerPage","components_PrefixesPage","ThemeProvider","CssBaseline","implementation","components_Navigator","PaperProps","xsDown","components_Header","App","componentWillMount","get","components_Paperbase","Boolean","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fecebc7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\n\r\nconst categories = [\r\n  {\r\n    id: 'Develop',\r\n    children: [\r\n      { id: 'LOV Analyzer', icon: <SettingsInputComponentIcon />, active: true },\r\n    ],\r\n  }\r\n];\r\n\r\nconst styles = theme => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    '&:hover,&:focus': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: '#232f3e',\r\n    boxShadow: '0 -1px 0 #404854 inset',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: '#4fc3f7',\r\n  },\r\n  itemPrimary: {\r\n    fontSize: 'inherit',\r\n  },\r\n  itemIcon: {\r\n    minWidth: 'auto',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction Navigator(props) {\r\n  const { classes, ...other } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          IGA HYBRID\r\n        </ListItem>\r\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.itemPrimary,\r\n            }}\r\n          >\r\n            Project Overview\r\n          </ListItemText>\r\n        </ListItem>\r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);","export const SPARQL_ENDPOINT_URL = 'https://lov.linkeddata.es/dataset/lov/sparql';\r\nexport const prefixes = {\r\n  vann:     'http://purl.org/vocab/vann/',\r\n  voaf:     'http://purl.org/vocommons/voaf#',\r\n  rdfs:     'http://www.w3.org/2000/01/rdf-schema#',\r\n  owl:      'http://www.w3.org/2002/07/owl#',\r\n  skos:     'http://www.w3.org/2004/02/skos/core#',\r\n  rdf:      'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\r\n};\r\n\r\n// export const reversePrefixes = {};\r\n// Object.keys(prefixes).forEach((prefix) => {\r\n//   reversePrefixes[prefixes[prefix]] = prefix;\r\n// });\r\n\r\nexport const PREFIXES = Object.keys(prefixes).map((prefix) => `PREFIX ${prefix}: <${prefixes[prefix]}>`).join('\\n') + '\\n';\r\n\r\n//export const FROMS = Object.keys(reversePrefixes).map((rp) => `FROM <${rp.slice(0, -1)}>\\nFROM <${rp}>`).join('\\n') + '\\n';\r\n\r\nexport const getQueryVocabs = () => `\r\nSELECT DISTINCT ?vocabPrefix ?vocabURI {\r\n \tGRAPH <https://lov.linkeddata.es/dataset/lov> {\r\n \t \t?vocabURI a voaf:Vocabulary.\r\n \t \t?vocabURI vann:preferredNamespacePrefix ?vocabPrefix.\r\n  }\r\n}\r\nORDER BY ?vocabPrefix\r\n`;\r\n\r\nexport const getQueryIris = () => `\r\nSELECT DISTINCT ?vocabURI ?vocabLabel (COUNT (?class) AS ?nClass) (COUNT (?ind) AS ?nInd) {\r\n  ?vocabURI a voaf:Vocabulary.\r\n  ?vocabURI vann:preferredNamespacePrefix ?vocabPrefix.\r\n  OPTIONAL { \r\n    ?vocabURI rdfs:label ?vocabLabel .\r\n    FILTER(LANGMATCHES(LANG(?vocabLabel), 'en') || LANGMATCHES(LANG(?vocabLabel), ''))\r\n  }\r\n  VALUES ?c { owl:Class rdf:Class } .\r\n  ?class a ?c .\r\n  ?class rdfs:isDefinedBy ?vocabURI .\r\n  OPTIONAL {\r\n    ?ind a ?class .\r\n  }\r\n} GROUP BY ?vocabURI ?vocabLabel ORDER BY DESC(?nInd)\r\n`;\r\n\r\nexport const getQueryFragmentInstancesCount = (fragment) => `\r\nSELECT (COUNT(DISTINCT *) AS ?n)\r\nWHERE {\r\n  BIND(<${fragment.p.value}> AS ?p) .\r\n  ?s a <${fragment.s.value}> .\r\n  ${fragment.o.value.startsWith('http://www.w3.org/2001/XMLSchema#') ? '' : `?o a <${fragment.o.value}> .`}\r\n  ?s ?p ?o .\r\n}\r\n`;\r\n\r\nexport const getQueryFragmentInstances = (fragment) => `\r\nSELECT DISTINCT ?s ?p ?o\r\nWHERE {\r\n  BIND(<${fragment.p.value}> AS ?p) .\r\n  ?s a <${fragment.s.value}> .\r\n  ${fragment.o.value.startsWith('http://www.w3.org/2001/XMLSchema#') ? '' : `?o a <${fragment.o.value}> .`}\r\n  ?s ?p ?o .\r\n}\r\n`;\r\nexport const getQueryConnectedSchemas = (iri) => `\r\nSELECT DISTINCT\r\n?s ?sp ?sd ?p ?o ?op ?od\r\nFROM <http://purl.org/dc/terms/>\r\nFROM <http://purl.org/vocab/vann/>\r\nFROM <http://www.w3.org/2004/02/skos/core>\r\nFROM <http://purl.org/dc/elements/1.1/>\r\nFROM <http://creativecommons.org/ns>\r\nFROM <http://xmlns.com/foaf/0.1/>\r\nFROM <http://schema.org/>\r\nFROM <http://www.w3.org/ns/prov#>\r\n\r\nFROM <${iri}>\r\nWHERE {\r\n  ?p rdfs:isDefinedBy <${iri}> .\r\n  VALUES ?pt { owl:ObjectProperty owl:DatatypeProperty rdf:Property } .\r\n  ?p a ?pt .\r\n  OPTIONAL {\r\n    ?p rdfs:domain ?s .\r\n    OPTIONAL {\r\n      ?p rdfs:subPropertyOf ?op .\r\n        OPTIONAL { ?op rdfs:range ?od . }\r\n    }\r\n  }\r\n  OPTIONAL {\r\n    ?p rdfs:range ?o .\r\n    OPTIONAL {\r\n      ?p rdfs:subPropertyOf ?sp .\r\n      OPTIONAL { ?sp rdfs:domain ?sd . }\r\n    }\r\n  }\r\n}\r\nORDER BY ?s\r\n`;\r\n\r\nexport const getQueryMetadata = (iri) => `\r\nSELECT ?label ?ontology ?comment ?definition WHERE {\r\n  BIND (<${iri}> AS ?entity).\r\n  ?entity rdfs:label ?label .\r\n  OPTIONAL { ?entity rdfs:isDefinedBy ?ontology }\r\n  OPTIONAL { ?entity rdfs:comment ?comment }\r\n  OPTIONAL { ?entity skos:definition ?definition }\r\n}\r\n`;","import axios from 'axios';\r\nimport { SPARQL_ENDPOINT_URL, PREFIXES, getQueryIris } from './sparql'\r\nexport const axiosConfig = {\r\n  headers: { \r\n    \"accept\": \"application/sparql-results+json,*/*;q=0.9\", \r\n    \"accept-language\": \"en-US,en;q=0.9\", \r\n    \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\", \r\n  }\r\n};\r\n\r\nexport const fetchIris = () => {\r\n    const payload = `query=${PREFIXES}${getQueryIris()}`;\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig)\r\n};","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport const debounce = (fn, time) => {\r\n  let timeout;\r\n  return function () {\r\n    const functionCall = () => fn.apply(this, arguments);\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(functionCall, time);\r\n  }\r\n};\r\n\r\nexport const shortenIri = (iri) => {\r\n  const prefixes = Object.keys(window.reversePrefixes);\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    let prefix = prefixes[i];\r\n    if (iri.startsWith(prefix)) {\r\n      if (iri.length === prefix.length) {\r\n        return window.reversePrefixes[prefix];\r\n      }\r\n      return `${window.reversePrefixes[prefix]}:${iri.slice(prefix.length)}`;\r\n    }\r\n  }\r\n  return iri;\r\n};\r\n\r\nexport const createIriLink = (iri) => {\r\n  if (!/^https?:\\/\\//.test(iri)) {\r\n    return iri;\r\n  }\r\n  return <Link href={iri} target=\"_blank\" rel=\"noopener noreferrer\">{shortenIri(iri)}</Link>;\r\n};\r\n\r\nexport const createLink = (iri) => {\r\n  return <Link href={iri} target=\"_blank\" rel=\"noopener noreferrer\">{iri}</Link>;\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table size=\"small\" height={height} width={width} {...tableProps} rowClassName={this.getRowClassName}>\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={headerProps =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nexport default withStyles(styles)(MuiVirtualizedTable);\r\n","import React from 'react';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createIriLink } from '../utils';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport VirtualizedTable from './VirtualizedTable'\r\n\r\nconst tableHeadStyle = {\r\n  backgroundColor: 'white',\r\n  position: 'sticky',\r\n  top: 0,\r\n  fontWeight: 'bold',\r\n};\r\nconst styles = (theme) => ({\r\n  head: tableHeadStyle,\r\n  headLast: {\r\n    ...tableHeadStyle,\r\n    width: 150,\r\n  },\r\n  fragmentButton: {\r\n    padding: '4px 16px',\r\n    width: 32,\r\n    justifyContent: 'flex-end',\r\n  }\r\n});\r\n\r\nconst FragmentsTable = ({ fragments, showInstances, showOnlyFullFragments, ontologySelected, classes }) => {\r\n  const mRows = fragments ? Object.keys(fragments).filter((key) => {\r\n    if (showOnlyFullFragments) {\r\n      const { s, p, o } = fragments[key];\r\n      return s && p && o;\r\n    }\r\n    return true\r\n  }).map((key, index) => {\r\n    const { s, p, o, i } = fragments[key];\r\n    return { \r\n      id: key, \r\n      index: index + 1, \r\n      s: createIriLink(s ? s.value : ''), \r\n      p: createIriLink(p ? p.value : ''), \r\n      o: createIriLink(o ? o.value : ''),\r\n      i: i === null ?\r\n        <CircularProgress size={26} /> :\r\n        <Button className={classes.fragmentButton}  onClick={showInstances(key)} color=\"primary\">\r\n          {i}{i ? <span>&nbsp;</span> : ''}{i ? <Visibility /> : ''}\r\n        </Button>\r\n    };\r\n  }) : [];\r\n  return (\r\n    \r\n    <Paper style={{ height: 640, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={mRows.length}\r\n        rowGetter={({ index }) => mRows[index]}\r\n        columns={[\r\n          {\r\n            width: 100,\r\n            label: `(${mRows.length}) #`,\r\n            dataKey: 'index',\r\n            numeric: true,\r\n            align: 'right',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Subject',\r\n            dataKey: 's',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Predicate',\r\n            dataKey: 'p',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Object',\r\n            dataKey: 'o',\r\n          },\r\n          {\r\n            width: 150,\r\n            label: 'Instances',\r\n            dataKey: 'i',\r\n          },\r\n        ]}\r\n      />\r\n      {ontologySelected && !Object.keys(fragments).length && <Typography variant=\"subtitle2\">No class fragment found in this ontology</Typography>}\r\n    </Paper>\r\n    \r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(FragmentsTable);\r\n/*<Table size=\"small\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.head} align=\"left\">Subject</TableCell>\r\n          <TableCell className={classes.head} align=\"left\">Predicate</TableCell>\r\n          <TableCell className={classes.head} align=\"left\">Object</TableCell>\r\n          <TableCell className={classes.headLast} align=\"right\" title=\"The number of instantiated triples\">Instances</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {Object.keys(fragments).filter((key) => {\r\n          if (showOnlyFullFragments) {\r\n            const { s, p, o } = fragments[key];\r\n            return s && p && o;\r\n          }\r\n          return true;\r\n        }).map((key) => {\r\n          const { s, p, o, i } = fragments[key];\r\n          return (\r\n            <TableRow key={key}>\r\n              <TableCell align=\"left\">{s ? createIriLink(s.value) : ''}</TableCell>\r\n              <TableCell align=\"left\">{p ? createIriLink(p.value) : ''}</TableCell>\r\n              <TableCell align=\"left\">{o ? createIriLink(o.value) : ''}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {\r\n                  i === null ?\r\n                    <CircularProgress size={26} /> :\r\n                    <Button className={classes.fragmentButton} variant={i.length ? 'contained' : 'text'} onClick={showInstances(key)} color=\"primary\" title={`Show ${i.length} instances` }>\r\n                      {i.length}{i.length ? <span>&nbsp;</span> : ''}{i.length ? <Visibility /> : ''}\r\n                    </Button>\r\n                }\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n        {ontologySelected && !Object.keys(fragments).length && \r\n          <TableRow>\r\n            <TableCell align=\"left\"><Typography variant=\"subtitle2\">No class fragment found in this ontology</Typography></TableCell>\r\n          </TableRow>}\r\n      </TableBody>\r\n        </Table>*/","import React from 'react';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createIriLink } from '../utils';\r\nimport VirtualizedTable from './VirtualizedTable'\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n  head1: {\r\n    backgroundColor: 'white',\r\n    position: 'sticky',\r\n    top: 0\r\n  },\r\n  head2: {\r\n    backgroundColor: '#004b6e',\r\n    color: 'white',\r\n    position: 'sticky',\r\n    top: 40,\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\nconst FragmentInstancesTable = ({ fragmentInstancesLoading, fragmentInstances, classFragment, classes }) => {\r\n  const mRows = fragmentInstances ? fragmentInstances.map((fi, index) => {\r\n    const { s, p, o } = fi;\r\n    return { id: index, index: index + 1, s: createIriLink(s.value), p: createIriLink(p.value), o: createIriLink(o.value) };\r\n  }) : [];\r\n  return (\r\n    <Paper style={{ height: 640, width: '100%' }}>\r\n      {fragmentInstancesLoading ?\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}><CircularProgress size={40} /></div> :\r\n        <VirtualizedTable\r\n          rowCount={mRows.length}\r\n          rowGetter={({ index }) => mRows[index]}\r\n          columns={[\r\n            {\r\n              width: 100,\r\n              label: `(${mRows.length}) #`,\r\n              dataKey: 'index',\r\n              numeric: true,\r\n              align: 'right',\r\n            },\r\n            {\r\n              flexGrow: 1,\r\n              width: 0,\r\n              label: <span>Subject class&nbsp;({createIriLink(classFragment ? classFragment.s.value : '')})</span>,\r\n              dataKey: 's',\r\n            },\r\n            {\r\n              flexGrow: 1,\r\n              width: 0,\r\n              label: <span>Predicate&nbsp;({createIriLink(classFragment ? classFragment.p.value : '')})</span>,\r\n              dataKey: 'p',\r\n            },\r\n            {\r\n              flexGrow: 1,\r\n              width: 0,\r\n              label: <span>Object class&nbsp;({createIriLink(classFragment ? classFragment.o.value : '')})</span>,\r\n              dataKey: 'o',\r\n            },\r\n          ]}\r\n        />\r\n      }\r\n    </Paper>\r\n  );\r\n  /*return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell align=\"right\" className={classes.head1} style={{ width: 150 }}>#</TableCell>\r\n          <TableCell className={classes.head1}>Subject</TableCell>\r\n          <TableCell className={classes.head1}>Predicate</TableCell>\r\n          <TableCell className={classes.head1}>Object</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align=\"right\" className={classes.head2}>Class fragment</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.s ? createIriLink(classFragment.s.value) : ''}</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.p ? createIriLink(classFragment.p.value) : ''}</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.o ? createIriLink(classFragment.o.value) : ''}</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {fragmentInstances && fragmentInstances.map((fi, index) => {\r\n          const { s, p, o } = fi;\r\n          return (\r\n            <TableRow key={index}>\r\n              <TableCell align=\"right\">{index + 1}</TableCell>\r\n              <TableCell>{createIriLink(s.value)}</TableCell>\r\n              <TableCell>{createIriLink(p.value)}</TableCell>\r\n              <TableCell>{createIriLink(o.value)}</TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n        {fragmentInstances && !fragmentInstances.length && (\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell align=\"left\">No instances available</TableCell>\r\n            <TableCell></TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n  );*/\r\n}\r\n\r\nexport default withStyles(styles)(FragmentInstancesTable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport Refresh from '@material-ui/icons/Refresh';\r\nimport axios from 'axios';\r\nimport bluebird from 'bluebird';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { SPARQL_ENDPOINT_URL, PREFIXES, getQueryConnectedSchemas, getQueryFragmentInstancesCount, getQueryFragmentInstances } from '../sparql';\r\nimport { axiosConfig, fetchIris } from '../network';\r\nimport { createIriLink, createLink } from '../utils';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FragmentsTable from './FragmentsTable';\r\nimport FragmentInstancesTable from './FragmentInstancesTable';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport chunk from 'lodash/chunk';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  submitButton: {\r\n    marginRight: theme.spacing(1),\r\n    minWidth: 140,\r\n  },\r\n  submitButtonContent: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  formControl: {\r\n    flexGrow: 1\r\n  },\r\n  codeBlock: {\r\n    padding: '10px',\r\n    width: 'calc(100% - 24px)',\r\n    margin: '10px auto',\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#ccc',\r\n    height: 'auto',\r\n    border: 'none',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  dialogTitle: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  }\r\n});\r\nconst selectStyles = {\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    return {\r\n      ...styles,\r\n      textAlign: 'left',\r\n      padding: '10px'\r\n    };\r\n  },\r\n};\r\nclass AnalyzerPage extends React.Component {\r\n  state = {\r\n    fragments: {},\r\n    selectedOption: null,\r\n    selectOptions: [],\r\n    loading: true,\r\n    fragmentInstances: null,\r\n    classFragment: null,\r\n    sparqlPreview: false,\r\n    showOnlyFullFragments: localStorage.getItem('preferences.showOnlyFullFragments') === 'true',\r\n  }\r\n  componentDidMount = () => {\r\n    fetchIris().then((resp) => {\r\n      const iris = resp.data.results.bindings.map((binding) => {\r\n        return {\r\n          iri: binding.vocabURI.value,\r\n          label: binding.vocabLabel ? binding.vocabLabel.value : '',\r\n          nClass: binding.nClass.value,\r\n          nInd: binding.nInd.value,\r\n        }\r\n      });\r\n      this.setState({\r\n        loading: false,\r\n        selectOptions: iris.map(({ iri, label, nClass, nInd }) => {\r\n          return { value: iri, label: `${iri}${label ? ` - ${label}` : ''}, classes: ${nClass}, instances: ${nInd}` };\r\n        })\r\n      });\r\n    });\r\n  }\r\n  handleSelectOptionChange = (selectedOption) => {\r\n    this.setState({ selectedOption }, () => {\r\n      this.fetchConnectedSchemas();\r\n    });\r\n  }\r\n  handleInputChange = (name) => (e) => {\r\n    this.setState({ [name]: e.target.checked });\r\n    if (name === 'showOnlyFullFragments') {\r\n      localStorage.setItem('preferences.showOnlyFullFragments', e.target.checked);\r\n    }\r\n  };\r\n  fetchConnectedSchemas = () => {\r\n    this.setState({ loading: true });\r\n    const payload = `query=${PREFIXES}${getQueryConnectedSchemas(this.state.selectedOption.value)}`;\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n      const fragments = {};\r\n      resp.data.results.bindings.forEach((binding) => {\r\n        const { s, sd, p, o, od } = binding;\r\n        const uuid = uuidv4();\r\n        const fragment = {\r\n          s: s ? s : sd || sd || null,\r\n          p,\r\n          o: o ? o : o || od || null,\r\n        };\r\n        fragment.i = fragment.s && fragment.o && fragment.p ? null : 0;\r\n        fragments[uuid] = fragment;\r\n      });\r\n      this.setState({ fragments, loading: false }, () => {\r\n        this.fetchFragmentInstances();\r\n      });\r\n    });\r\n  }\r\n  fetchFragmentInstances = () => {\r\n    const { fragments } = this.state;\r\n    const fragmentKeys = Object.keys(fragments).filter((key) => {\r\n      const { s, p, o } = fragments[key];\r\n      if (this.state.showOnlyFullFragments) {\r\n        return s && p && o;\r\n      }\r\n      return true;\r\n    });\r\n    const fragmentKeyGroups = chunk(fragmentKeys, 10);\r\n    bluebird.each(fragmentKeyGroups, (fkg) => {\r\n      const counts = {};\r\n      return bluebird.delay(500).then(() => {\r\n        return bluebird.map(fkg, (key) => {\r\n          const { s, p, o } = fragments[key];\r\n          if (s && p && o) {\r\n            const payload = `query=${PREFIXES}${getQueryFragmentInstancesCount(fragments[key])}`;\r\n            return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n              counts[key] = resp.data.results.bindings[0].n.value;\r\n            });\r\n          }\r\n          return bluebird.delay(0);\r\n        });\r\n      }).then(() => {\r\n        const newFragments = { ...fragments };\r\n        Object.keys(counts).forEach((countKey) => {\r\n          newFragments[countKey].i = counts[countKey];\r\n        });\r\n        this.setState({ fragments: newFragments });\r\n      });\r\n    });\r\n  };\r\n  showSparqlPreview = (query) => () => {\r\n    this.setState({ sparqlPreview: query });\r\n  }\r\n  showInstances = (key) => () => {\r\n    const { s, p, o } = this.state.fragments[key];\r\n    const payload = `query=${PREFIXES}${getQueryFragmentInstances(this.state.fragments[key])}`;\r\n    this.setState({ fragmentInstancesLoading: true });\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n      this.setState({\r\n        fragmentInstancesLoading: false,\r\n        fragmentInstances: resp.data.results.bindings,\r\n        classFragment: { s, p, o }\r\n      });\r\n    });\r\n  }\r\n  closeSparqlModal = () => {\r\n    this.setState({ sparqlPreview: false });\r\n  }\r\n  closeInstancesModal = () => {\r\n    this.setState({ fragmentInstances: null, classFragment: null });\r\n  }\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.controls}>\r\n          <Typography align=\"left\" variant=\"h5\">\r\n            Find class fragments\r\n          </Typography>\r\n          <div>\r\n            <FormControlLabel\r\n              control={<Switch checked={this.state.showOnlyFullFragments} onChange={this.handleInputChange('showOnlyFullFragments')} value=\"showOnlyFullFragments\" color=\"primary\" />}\r\n              label=\"Show only full fragments\"\r\n            />\r\n            <Button color=\"primary\" onClick={this.showSparqlPreview(getQueryConnectedSchemas(this.state.selectedOption ? this.state.selectedOption.value : '__YOUR_SELECTED_VOCAB__').trim())}>View SPARQL&nbsp;<Visibility /></Button>\r\n          </div>\r\n        </div>\r\n        <Typography align=\"left\" variant=\"subtitle2\">\r\n          This tool will help you identify class fragments in a selected ontology and fetch their instances. Begin by selecting an ontology in the list below.\r\n        </Typography>\r\n        <Paper className={classes.paper}>\r\n          <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n            <Toolbar>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <SearchIcon className={classes.block} color=\"inherit\" />\r\n                </Grid>\r\n                <FormControl className={classes.formControl}>\r\n                  <Select\r\n                    classes={classes}\r\n                    styles={selectStyles}\r\n                    inputId=\"react-select-input\"\r\n                    TextFieldProps={{ label: 'Ontology IRI', placeholder: 'Type to search for ontology' }}\r\n                    options={this.state.selectOptions}\r\n                    value={this.state.selectedOption}\r\n                    onChange={this.handleSelectOptionChange}\r\n                  />\r\n                </FormControl>\r\n                <Grid item>\r\n                  <div className={classes.submitButton}>\r\n                    {this.state.loading ? <CircularProgress size={20} /> :\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={this.fetchConnectedSchemas}>\r\n                        <div className={classes.submitButtonContent}><Refresh style={{ fontSize: 24 }} />&nbsp;Reload</div>\r\n                      </Button>}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper className={classes.root}>\r\n            <FragmentsTable\r\n              fragments={this.state.fragments}\r\n              showInstances={this.showInstances}\r\n              showOnlyFullFragments={this.state.showOnlyFullFragments}\r\n              ontologySelected={this.state.selectedOption ? true : false}\r\n            />\r\n          </Paper>\r\n        </Paper>\r\n        <Dialog onClose={this.closeInstancesModal} open={this.state.fragmentInstances || this.state.fragmentInstancesLoading ? true : false} fullWidth={true} maxWidth=\"xl\">\r\n          <DialogTitle>\r\n            <div className={classes.dialogTitle}>\r\n              <span>Class fragment instances in {this.state.selectedOption && createIriLink(this.state.selectedOption.value)}</span>\r\n              {this.state.classFragment && <span><Button color=\"primary\" onClick={this.showSparqlPreview(getQueryFragmentInstances(this.state.classFragment).trim())}>View SPARQL&nbsp;<Visibility /></Button></span>}\r\n            </div>\r\n          </DialogTitle>\r\n          <FragmentInstancesTable fragmentInstancesLoading={this.state.fragmentInstancesLoading} fragmentInstances={this.state.fragmentInstances} classFragment={this.state.classFragment} />\r\n        </Dialog>\r\n        <Dialog onClose={this.closeSparqlModal} open={this.state.sparqlPreview ? true : false} fullWidth={true} maxWidth=\"md\">\r\n          <DialogTitle>\r\n            SPARQL query\r\n            <Typography variant=\"body2\">See also {createLink('https://github.com/nvbach91/iga-hybrid')}</Typography>\r\n          </DialogTitle>\r\n          <TextareaAutosize readOnly className={classes.codeBlock} defaultValue={this.state.sparqlPreview} />\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nAnalyzerPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AnalyzerPage);\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { createIriLink, createLink } from '../utils';\r\nimport VirtualizedTable from './VirtualizedTable'\r\n\r\nexport default function PrefixesTable({ rows }) {\r\n  const mRows = rows.map((prefix) => {\r\n    const iri = window.prefixes[prefix];\r\n    return { id: prefix, prefix: createIriLink(iri), iri: createLink(iri) };\r\n  })\r\n  return (\r\n    <Paper style={{ height: 400, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={mRows.length}\r\n        rowGetter={({ index }) => mRows[index]}\r\n        columns={[\r\n          {\r\n            width: 200,\r\n            label: 'Prefix',\r\n            dataKey: 'prefix',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'IRI',\r\n            dataKey: 'iri',\r\n          },\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PrefixesTable from './PrefixesTable';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createLink } from '../utils';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  formControl: {\r\n    flexGrow: 1\r\n  },\r\n});\r\nclass PrefixesPage extends React.Component {\r\n  state = {\r\n    searchValue: '',\r\n    rows: Object.keys(window.prefixes),\r\n  }\r\n  handleInputChange = (name) => (e) => {\r\n    this.setState({ \r\n      [name]: e.target.value, \r\n      rows: Object.keys(window.prefixes).filter((prefix) => {\r\n        return prefix.toLowerCase().includes(e.target.value.trim().toLowerCase());\r\n      }) \r\n    });\r\n  }\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n      <Typography align=\"left\" variant=\"h5\">\r\n        Search for prefixes\r\n      </Typography>\r\n      <Typography align=\"left\" variant=\"subtitle2\">\r\n        These prefixes come from {createLink('https://prefix.cc/context')}\r\n      </Typography>\r\n        <Paper className={classes.paper}>\r\n          <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n            <Toolbar>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <SearchIcon className={classes.block} color=\"inherit\" />\r\n                </Grid>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField value={this.state.searchValue} onChange={this.handleInputChange('searchValue')} />\r\n                </FormControl>\r\n              </Grid>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper className={classes.root}>\r\n            <PrefixesTable rows={this.state.rows}/>\r\n          </Paper>\r\n        </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPrefixesPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PrefixesPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = theme => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle, onTabSwitch, tabIndex } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton color=\"inherit\" aria-label=\"Open drawer\" onClick={onDrawerToggle} className={classes.menuButton}>\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts • No alters\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar\r\n                  className={classes.avatar}\r\n                  src=\"favicon.png\"\r\n                  alt=\"avatar\"\r\n                />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                LOV Analyzer\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={tabIndex} textColor=\"inherit\">\r\n          <Tab textColor=\"inherit\" label=\"LOV Analyzer\" onClick={onTabSwitch(0)}/>\r\n          <Tab textColor=\"inherit\" label=\"Prefixes\" onClick={onTabSwitch(1)}/>\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Navigator from './Navigator';\r\nimport AnalyzerPage from './AnalyzerPage';\r\nimport PrefixesPage from './PrefixesPage';\r\nimport Header from './Header';\r\n\r\nlet theme = createMuiTheme({\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#009be5',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        backgroundColor: '#18202c',\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: 'none',\r\n      },\r\n      contained: {\r\n        boxShadow: 'none',\r\n        '&:active': {\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      indicator: {\r\n        height: 3,\r\n        borderTopLeftRadius: 3,\r\n        borderTopRightRadius: 3,\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none',\r\n        margin: '0 16px',\r\n        minWidth: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up('md')]: {\r\n          padding: 0,\r\n          minWidth: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: '#404854',\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color: 'inherit',\r\n        marginRight: 0,\r\n        '& svg': {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      root: {\r\n        width: 32,\r\n        height: 32,\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  mixins: {\r\n    ...theme.mixins,\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 192;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appAnalyzerPage: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  mainAnalyzerPage: {\r\n    flex: 1,\r\n    padding: '48px 36px 0',\r\n    background: '#eaeff1',\r\n  },\r\n};\r\n\r\nclass Paperbase extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n    tabIndex: 0,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n  handleTabSwitch = (tabIndex) => () => {\r\n    this.setState({ tabIndex });\r\n  }\r\n  renderAnalyzerPage = () => {\r\n    switch (this.state.tabIndex) {\r\n      case 0: return <AnalyzerPage />;\r\n      case 1: return <PrefixesPage />;\r\n      default: return <AnalyzerPage />;\r\n    }\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <nav className={classes.drawer}>\r\n            <Hidden smUp implementation=\"js\">\r\n              <Navigator\r\n                PaperProps={{ style: { width: drawerWidth } }}\r\n                variant=\"temporary\"\r\n                open={this.state.mobileOpen}\r\n                onClose={this.handleDrawerToggle}\r\n              />\r\n            </Hidden>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n            </Hidden>\r\n          </nav>\r\n          <div className={classes.appAnalyzerPage}>\r\n            <Header onDrawerToggle={this.handleDrawerToggle} onTabSwitch={this.handleTabSwitch} tabIndex={this.state.tabIndex}/>\r\n            <main className={classes.mainAnalyzerPage}>\r\n              {this.renderAnalyzerPage()}\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nPaperbase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Paperbase);","import React from 'react';\r\nimport Paperbase from './Paperbase';\r\nimport '../css/App.css';\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n  componentWillMount = () => {\r\n    axios.get('https://prefix.cc/context').then((resp) => {\r\n      window.prefixes = resp.data['@context'];\r\n      window.reversePrefixes = {};\r\n      Object.keys(window.prefixes).forEach((prefix) => {\r\n        window.reversePrefixes[window.prefixes[prefix]] = prefix;\r\n      });\r\n    });\r\n  }\r\n  render = () => (\r\n    <div className=\"App\">\r\n      <Paperbase />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css//index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}