{"version":3,"sources":["components/Navigator.js","sparql.js","network.js","utils.js","components/VirtualizedTable.js","components/FragmentsTable.js","components/FragmentInstancesTable.js","components/VocabSelector.js","components/ClassFragmentsPage.js","components/CodeListsTable.js","components/CodeListInstancesTable.js","components/CodeListsPage.js","components/PrefixesTable.js","components/PrefixesPage.js","components/Header.js","components/Paperbase.js","components/App.js","serviceWorker.js","index.js"],"names":["categories","id","children","icon","react_default","a","createElement","SettingsInputComponent_default","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","&:hover,&:focus","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Object","objectWithoutProperties","Drawer","assign","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","Home_default","ListItemText","primary","map","_ref","Fragment","key","_ref2","childId","button","Divider","SPARQL_ENDPOINT_URL","prefixes","vann","voaf","rdfs","owl","skos","rdf","PREFIXES","keys","prefix","concat","join","getQueryFragmentInstancesCount","fragment","p","value","s","o","startsWith","getQueryFragmentInstances","getQuerySchemaFragments","vocabIri","getQueryClassInstanceCounts","getQueryCodeListInstances","codeListIri","axiosConfig","headers","accept","accept-language","content-type","fetchVocabs","window","cached","vocabs","bluebird","resolve","payload","axios","post","then","resp","createIriLink","iri","test","Link","href","target","rel","reversePrefixes","i","length","slice","shortenIri","createLink","MuiVirtualizedTable","getRowClassName","index","_this$props","_this","onRowClick","tableRow","flexContainer","defineProperty","tableRowHover","cellRenderer","cellData","columnIndex","_this$props2","columns","rowHeight","TableCell","component","tableCell","noClick","style","height","align","numeric","headerRenderer","_ref3","label","_this$props3","headerHeight","_this2","this","_this$props4","tableProps","es","_ref4","width","size","rowClassName","_ref5","dataKey","headerProps","objectSpread","React","PureComponent","defaultProps","display","alignItems","boxSizing","cursor","&:hover","grey","flex","tableHeadStyle","position","top","fontWeight","head","headLast","fragmentButton","padding","justifyContent","fragments","showInstances","showOnlyFullFragments","vocabIsSelected","mRows","filter","_fragments$key","_fragments$key2","CircularProgress","Button","onClick","Visibility_default","Paper","VirtualizedTable","rowCount","rowGetter","flexGrow","Typography","head1","head2","fragmentInstancesLoading","fragmentInstances","classFragment","fi","selectStyles","option","styles","data","isDisabled","isFocused","isSelected","textAlign","VocabSelector","state","selectOptions","selectedOption","loading","componentWillMount","iris","results","bindings","binding","vocabURI","vocabLabel","nClass","nInd","setState","handleSelectChange","onVocabSelected","render","AppBar","searchBar","elevation","Toolbar","Grid","container","Search_default","block","FormControl","formControl","react_select_esm","TextFieldProps","placeholder","options","onChange","submitButton","onReloadClick","submitButtonContent","Refresh_default","Component","ClassFragmentsPage","selectedVocabOption","sparqlPreview","localStorage","getItem","fetchClassFragments","handleInputChange","name","e","checked","setItem","forEach","sd","od","uuid","uuidv4","fetchFragmentInstances","fragmentKeys","fragmentKeyGroups","chunk","each","fkg","counts","delay","n","newFragments","countKey","showSparqlPreview","query","_this$state$fragments","closeSparqlModal","closeInstancesModal","controls","FormControlLabel","control","Switch","trim","paper","components_VocabSelector","root","components_FragmentsTable","Dialog","onClose","open","fullWidth","maxWidth","DialogTitle","dialogTitle","components_FragmentInstancesTable","lib_default","readOnly","codeBlock","defaultValue","margin","borderBottom","border","codeLists","_codeLists$key","d","c","codeListInstances","codeList","cli","skosConcept","CodeListsPage","fetchCodeLists","codeListInstancesLoading","components_CodeListsTable","components_CodeListInstancesTable","PrefixesTable","rows","PrefixesPage","searchValue","_this$setState","toLowerCase","includes","TextField","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","link","textDecoration","borderColor","onDrawerToggle","onTabSwitch","tabIndex","Hidden","smUp","IconButton","aria-label","Menu_default","xs","Tooltip","title","Notifications_default","Avatar","avatar","src","alt","Help_default","Tabs","textColor","Tab","createMuiTheme","typography","h5","letterSpacing","light","main","dark","shape","borderRadius","overrides","MuiDrawer","MuiButton","textTransform","contained","&:active","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","MuiTab","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","& svg","MuiAvatar","disableRipple","mixins","toolbar","minHeight","drawer","flexShrink","appPage","flexDirection","mainPage","background","Paperbase","mobileOpen","handleDrawerToggle","handleTabSwitch","renderPage","components_CodeListsPage","components_ClassFragmentsPage","components_PrefixesPage","ThemeProvider","CssBaseline","implementation","components_Navigator","PaperProps","xsDown","components_Header","App","get","components_Paperbase","Boolean","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70e17f9a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\n\r\nconst categories = [\r\n  {\r\n    id: 'Develop',\r\n    children: [\r\n      { id: 'LOV Analyzer', icon: <SettingsInputComponentIcon />, active: true },\r\n    ],\r\n  }\r\n];\r\n\r\nconst styles = theme => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    '&:hover,&:focus': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: '#232f3e',\r\n    boxShadow: '0 -1px 0 #404854 inset',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: '#4fc3f7',\r\n  },\r\n  itemPrimary: {\r\n    fontSize: 'inherit',\r\n  },\r\n  itemIcon: {\r\n    minWidth: 'auto',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction Navigator(props) {\r\n  const { classes, ...other } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          IGA HYBRID\r\n        </ListItem>\r\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.itemPrimary,\r\n            }}\r\n          >\r\n            Project Overview\r\n          </ListItemText>\r\n        </ListItem>\r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);","export const SPARQL_ENDPOINT_URL = 'https://lov.linkeddata.es/dataset/lov/sparql';\r\nexport const prefixes = {\r\n  vann:     'http://purl.org/vocab/vann/',\r\n  voaf:     'http://purl.org/vocommons/voaf#',\r\n  rdfs:     'http://www.w3.org/2000/01/rdf-schema#',\r\n  owl:      'http://www.w3.org/2002/07/owl#',\r\n  skos:     'http://www.w3.org/2004/02/skos/core#',\r\n  rdf:      'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\r\n};\r\n\r\n// export const reversePrefixes = {};\r\n// Object.keys(prefixes).forEach((prefix) => {\r\n//   reversePrefixes[prefixes[prefix]] = prefix;\r\n// });\r\n\r\nexport const PREFIXES = Object.keys(prefixes).map((prefix) => `PREFIX ${prefix}: <${prefixes[prefix]}>`).join('\\n') + '\\n';\r\n\r\n//export const FROMS = Object.keys(reversePrefixes).map((rp) => `FROM <${rp.slice(0, -1)}>\\nFROM <${rp}>`).join('\\n') + '\\n';\r\n\r\nexport const getQueryVocabs = () => `\r\nSELECT DISTINCT ?vocabPrefix ?vocabURI {\r\n \tGRAPH <https://lov.linkeddata.es/dataset/lov> {\r\n \t \t?vocabURI a voaf:Vocabulary.\r\n \t \t?vocabURI vann:preferredNamespacePrefix ?vocabPrefix.\r\n  }\r\n}\r\nORDER BY ?vocabPrefix\r\n`;\r\n\r\nexport const getQueryVocabStats = () => `\r\nSELECT DISTINCT ?vocabURI ?vocabLabel (COUNT (?class) AS ?nClass) (COUNT (?ind) AS ?nInd) {\r\n  ?vocabURI a voaf:Vocabulary.\r\n  ?vocabURI vann:preferredNamespacePrefix ?vocabPrefix.\r\n  OPTIONAL { \r\n    ?vocabURI rdfs:label ?vocabLabel .\r\n    FILTER(LANGMATCHES(LANG(?vocabLabel), 'en') || LANGMATCHES(LANG(?vocabLabel), ''))\r\n  }\r\n  VALUES ?c { owl:Class rdf:Class } .\r\n  ?class a ?c .\r\n  ?class rdfs:isDefinedBy ?vocabURI .\r\n  OPTIONAL {\r\n    ?ind a ?class .\r\n  }\r\n} GROUP BY ?vocabURI ?vocabLabel ORDER BY DESC(?nInd)\r\n`;\r\n\r\nexport const getQueryFragmentInstancesCount = (fragment) => `\r\nSELECT (COUNT(DISTINCT *) AS ?n)\r\nWHERE {\r\n  BIND(<${fragment.p.value}> AS ?p) .\r\n  ?s a <${fragment.s.value}> .\r\n  ${fragment.o.value.startsWith('http://www.w3.org/2001/XMLSchema#') ? '' : `?o a <${fragment.o.value}> .`}\r\n  ?s ?p ?o .\r\n}\r\n`;\r\n\r\nexport const getQueryFragmentInstances = (fragment) => `\r\nSELECT DISTINCT ?s ?p ?o\r\nWHERE {\r\n  BIND(<${fragment.p.value}> AS ?p) .\r\n  ?s a <${fragment.s.value}> .\r\n  ${fragment.o.value.startsWith('http://www.w3.org/2001/XMLSchema#') ? '' : `?o a <${fragment.o.value}> .`}\r\n  ?s ?p ?o .\r\n}\r\n`;\r\nexport const getQuerySchemaFragments = (vocabIri) => `\r\nSELECT DISTINCT\r\n?s ?sp ?sd ?p ?o ?op ?od\r\nFROM <http://purl.org/dc/terms/>\r\nFROM <http://purl.org/vocab/vann/>\r\nFROM <http://www.w3.org/2004/02/skos/core>\r\nFROM <http://purl.org/dc/elements/1.1/>\r\nFROM <http://creativecommons.org/ns>\r\nFROM <http://xmlns.com/foaf/0.1/>\r\nFROM <http://schema.org/>\r\nFROM <http://www.w3.org/ns/prov#>\r\n\r\nFROM <${vocabIri}>\r\nWHERE {\r\n  ?p rdfs:isDefinedBy <${vocabIri}> .\r\n  VALUES ?pt { owl:ObjectProperty owl:DatatypeProperty rdf:Property } .\r\n  ?p a ?pt .\r\n  OPTIONAL {\r\n    ?p rdfs:domain ?s .\r\n    OPTIONAL {\r\n      ?p rdfs:subPropertyOf ?op .\r\n        OPTIONAL { ?op rdfs:range ?od . }\r\n    }\r\n  }\r\n  OPTIONAL {\r\n    ?p rdfs:range ?o .\r\n    OPTIONAL {\r\n      ?p rdfs:subPropertyOf ?sp .\r\n      OPTIONAL { ?sp rdfs:domain ?sd . }\r\n    }\r\n  }\r\n}\r\nORDER BY ?s\r\n`;\r\n\r\nexport const getQueryMetadata = (iri) => `\r\nSELECT ?label ?ontology ?comment ?definition WHERE {\r\n  BIND (<${iri}> AS ?entity).\r\n  ?entity rdfs:label ?label .\r\n  OPTIONAL { ?entity rdfs:isDefinedBy ?ontology }\r\n  OPTIONAL { ?entity rdfs:comment ?comment }\r\n  OPTIONAL { ?entity skos:definition ?definition }\r\n}\r\n`;\r\n\r\nexport const getQueryClassInstanceCounts = (vocabIri) => `\r\nSELECT DISTINCT ?d ?p ?c (COUNT(DISTINCT ?i) AS ?n)\r\nFROM <${vocabIri}> \r\nWHERE {\r\n  ?c a owl:Class .\r\n  ?i a ?c .\r\n  OPTIONAL { \r\n    ?p rdfs:range ?c . \r\n    OPTIONAL {\r\n    \t?p rdfs:domain ?d .\r\n    }\r\n  }\r\n}\r\nGROUP BY ?d ?p ?c\r\nORDER BY ?c\r\n`;\r\n\r\nexport const getQueryCodeListInstances = (codeListIri, vocabIri) => `\r\nSELECT DISTINCT ?i ?skosConcept\r\nFROM <${vocabIri}> \r\nWHERE {\r\n  ?i a <${codeListIri}> .\r\n  OPTIONAL {\r\n    BIND(skos:Concept AS ?skosConcept) .\r\n    ?i a ?skosConcept .\r\n  }\r\n}\r\nORDER BY ?i\r\n`;","import axios from 'axios';\r\nimport bluebird from 'bluebird';\r\nimport { SPARQL_ENDPOINT_URL, PREFIXES, getQueryVocabStats } from './sparql'\r\nexport const axiosConfig = {\r\n  headers: { \r\n    \"accept\": \"application/sparql-results+json,*/*;q=0.9\", \r\n    \"accept-language\": \"en-US,en;q=0.9\", \r\n    \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\", \r\n  }\r\n};\r\n\r\nexport const fetchVocabs = () => {\r\n  if (window.cached.vocabs) {\r\n    return bluebird.resolve(window.cached.vocabs);\r\n  }\r\n  const payload = `query=${PREFIXES}${getQueryVocabStats()}`;\r\n  return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n    window.cached.vocabs = resp;\r\n    return resp;\r\n  });\r\n};","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport const debounce = (fn, time) => {\r\n  let timeout;\r\n  return function () {\r\n    const functionCall = () => fn.apply(this, arguments);\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(functionCall, time);\r\n  }\r\n};\r\n\r\nexport const shortenIri = (iri) => {\r\n  const prefixes = Object.keys(window.cached.reversePrefixes);\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    let prefix = prefixes[i];\r\n    if (iri.startsWith(prefix)) {\r\n      if (iri.length === prefix.length) {\r\n        return window.cached.reversePrefixes[prefix];\r\n      }\r\n      return `${window.cached.reversePrefixes[prefix]}:${iri.slice(prefix.length)}`;\r\n    }\r\n  }\r\n  return iri;\r\n};\r\n\r\nexport const createIriLink = (iri) => {\r\n  if (!/^https?:\\/\\//.test(iri)) {\r\n    return iri;\r\n  }\r\n  return <Link href={iri} target=\"_blank\" rel=\"noopener noreferrer\">{shortenIri(iri)}</Link>;\r\n};\r\n\r\nexport const createLink = (iri) => {\r\n  return <Link href={iri} target=\"_blank\" rel=\"noopener noreferrer\">{iri}</Link>;\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table size=\"small\" height={height} width={width} {...tableProps} rowClassName={this.getRowClassName}>\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={headerProps =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nexport default withStyles(styles)(MuiVirtualizedTable);\r\n","import React from 'react';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createIriLink } from '../utils';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport VirtualizedTable from './VirtualizedTable'\r\n\r\nconst tableHeadStyle = {\r\n  backgroundColor: 'white',\r\n  position: 'sticky',\r\n  top: 0,\r\n  fontWeight: 'bold',\r\n};\r\nconst styles = (theme) => ({\r\n  head: tableHeadStyle,\r\n  headLast: {\r\n    ...tableHeadStyle,\r\n    width: 150,\r\n  },\r\n  fragmentButton: {\r\n    padding: '4px 16px',\r\n    width: 32,\r\n    justifyContent: 'flex-end',\r\n  }\r\n});\r\n\r\nconst FragmentsTable = ({ fragments, showInstances, showOnlyFullFragments, vocabIsSelected, classes }) => {\r\n  const mRows = fragments ? Object.keys(fragments).filter((key) => {\r\n    if (showOnlyFullFragments) {\r\n      const { s, p, o } = fragments[key];\r\n      return s && p && o;\r\n    }\r\n    return true\r\n  }).map((key, index) => {\r\n    const { s, p, o, i } = fragments[key];\r\n    return { \r\n      id: key, \r\n      index: index + 1, \r\n      s: createIriLink(s ? s.value : ''), \r\n      p: createIriLink(p ? p.value : ''), \r\n      o: createIriLink(o ? o.value : ''),\r\n      i: i === null ?\r\n        <CircularProgress size={26} /> :\r\n        <Button className={classes.fragmentButton}  onClick={showInstances(key)} color=\"primary\">\r\n          {i}{i ? <span>&nbsp;</span> : ''}{i ? <Visibility /> : ''}\r\n        </Button>\r\n    };\r\n  }) : [];\r\n  return (\r\n    \r\n    <Paper style={{ height: 640, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={mRows.length}\r\n        rowGetter={({ index }) => mRows[index]}\r\n        columns={[\r\n          {\r\n            width: 100,\r\n            label: `(${mRows.length}) #`,\r\n            dataKey: 'index',\r\n            numeric: true,\r\n            align: 'right',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Subject',\r\n            dataKey: 's',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Predicate',\r\n            dataKey: 'p',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Object',\r\n            dataKey: 'o',\r\n          },\r\n          {\r\n            width: 150,\r\n            label: 'Instances',\r\n            dataKey: 'i',\r\n          },\r\n        ]}\r\n      />\r\n      {vocabIsSelected && !Object.keys(fragments).length && <Typography variant=\"subtitle2\">No class fragment found in this ontology</Typography>}\r\n    </Paper>\r\n    \r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(FragmentsTable);\r\n/*<Table size=\"small\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.head} align=\"left\">Subject</TableCell>\r\n          <TableCell className={classes.head} align=\"left\">Predicate</TableCell>\r\n          <TableCell className={classes.head} align=\"left\">Object</TableCell>\r\n          <TableCell className={classes.headLast} align=\"right\" title=\"The number of instantiated triples\">Instances</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {Object.keys(fragments).filter((key) => {\r\n          if (showOnlyFullFragments) {\r\n            const { s, p, o } = fragments[key];\r\n            return s && p && o;\r\n          }\r\n          return true;\r\n        }).map((key) => {\r\n          const { s, p, o, i } = fragments[key];\r\n          return (\r\n            <TableRow key={key}>\r\n              <TableCell align=\"left\">{s ? createIriLink(s.value) : ''}</TableCell>\r\n              <TableCell align=\"left\">{p ? createIriLink(p.value) : ''}</TableCell>\r\n              <TableCell align=\"left\">{o ? createIriLink(o.value) : ''}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {\r\n                  i === null ?\r\n                    <CircularProgress size={26} /> :\r\n                    <Button className={classes.fragmentButton} variant={i.length ? 'contained' : 'text'} onClick={showInstances(key)} color=\"primary\" title={`Show ${i.length} instances` }>\r\n                      {i.length}{i.length ? <span>&nbsp;</span> : ''}{i.length ? <Visibility /> : ''}\r\n                    </Button>\r\n                }\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n        {vocabIsSelected && !Object.keys(fragments).length && \r\n          <TableRow>\r\n            <TableCell align=\"left\"><Typography variant=\"subtitle2\">No class fragment found in this ontology</Typography></TableCell>\r\n          </TableRow>}\r\n      </TableBody>\r\n        </Table>*/","import React from 'react';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createIriLink } from '../utils';\r\nimport VirtualizedTable from './VirtualizedTable'\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n  head1: {\r\n    backgroundColor: 'white',\r\n    position: 'sticky',\r\n    top: 0\r\n  },\r\n  head2: {\r\n    backgroundColor: '#004b6e',\r\n    color: 'white',\r\n    position: 'sticky',\r\n    top: 40,\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\nconst FragmentInstancesTable = ({ fragmentInstancesLoading, fragmentInstances, classFragment, classes }) => {\r\n  const mRows = fragmentInstances ? fragmentInstances.map((fi, index) => {\r\n    const { s, p, o } = fi;\r\n    return { id: index, index: index + 1, s: createIriLink(s.value), p: createIriLink(p.value), o: createIriLink(o.value) };\r\n  }) : [];\r\n  return (\r\n    <Paper style={{ height: 640, width: '100%' }}>\r\n      {fragmentInstancesLoading ?\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}><CircularProgress size={40} /></div> :\r\n        <VirtualizedTable\r\n          rowCount={mRows.length}\r\n          rowGetter={({ index }) => mRows[index]}\r\n          columns={[\r\n            {\r\n              width: 100,\r\n              label: `(${mRows.length}) #`,\r\n              dataKey: 'index',\r\n              numeric: true,\r\n              align: 'right',\r\n            },\r\n            {\r\n              flexGrow: 1,\r\n              width: 0,\r\n              label: <span>Subject class&nbsp;({createIriLink(classFragment ? classFragment.s.value : '')})</span>,\r\n              dataKey: 's',\r\n            },\r\n            {\r\n              flexGrow: 1,\r\n              width: 0,\r\n              label: <span>Predicate&nbsp;({createIriLink(classFragment ? classFragment.p.value : '')})</span>,\r\n              dataKey: 'p',\r\n            },\r\n            {\r\n              flexGrow: 1,\r\n              width: 0,\r\n              label: <span>Object class&nbsp;({createIriLink(classFragment ? classFragment.o.value : '')})</span>,\r\n              dataKey: 'o',\r\n            },\r\n          ]}\r\n        />\r\n      }\r\n    </Paper>\r\n  );\r\n  /*return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell align=\"right\" className={classes.head1} style={{ width: 150 }}>#</TableCell>\r\n          <TableCell className={classes.head1}>Subject</TableCell>\r\n          <TableCell className={classes.head1}>Predicate</TableCell>\r\n          <TableCell className={classes.head1}>Object</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align=\"right\" className={classes.head2}>Class fragment</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.s ? createIriLink(classFragment.s.value) : ''}</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.p ? createIriLink(classFragment.p.value) : ''}</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.o ? createIriLink(classFragment.o.value) : ''}</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {fragmentInstances && fragmentInstances.map((fi, index) => {\r\n          const { s, p, o } = fi;\r\n          return (\r\n            <TableRow key={index}>\r\n              <TableCell align=\"right\">{index + 1}</TableCell>\r\n              <TableCell>{createIriLink(s.value)}</TableCell>\r\n              <TableCell>{createIriLink(p.value)}</TableCell>\r\n              <TableCell>{createIriLink(o.value)}</TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n        {fragmentInstances && !fragmentInstances.length && (\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell align=\"left\">No instances available</TableCell>\r\n            <TableCell></TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n  );*/\r\n}\r\n\r\nexport default withStyles(styles)(FragmentInstancesTable);\r\n","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { fetchVocabs } from '../network';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Refresh from '@material-ui/icons/Refresh';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nconst styles = theme => ({\r\n  formControl: {\r\n    flexGrow: 1\r\n  },\r\n  submitButton: {\r\n    marginRight: theme.spacing(1),\r\n    minWidth: 140,\r\n  },\r\n  submitButtonContent: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\nconst selectStyles = {\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    return {\r\n      ...styles,\r\n      textAlign: 'left',\r\n      padding: '10px'\r\n    };\r\n  },\r\n};\r\nclass VocabSelector extends React.Component {\r\n  state = {\r\n    selectOptions: [],\r\n    selectedOption: null,\r\n    loading: true,\r\n  }\r\n  componentWillMount = () => {\r\n    fetchVocabs().then((resp) => {\r\n      const iris = resp.data.results.bindings.map((binding) => {\r\n        return {\r\n          iri: binding.vocabURI.value,\r\n          label: binding.vocabLabel ? binding.vocabLabel.value : '',\r\n          nClass: binding.nClass.value,\r\n          nInd: binding.nInd.value,\r\n        }\r\n      });\r\n      this.setState({\r\n        loading: false,\r\n        selectOptions: iris.map(({ iri, label, nClass, nInd }) => {\r\n          return { value: iri, label: `${iri}${label ? ` - ${label}` : ''}, classes: ${nClass}, instances: ${nInd}` };\r\n        })\r\n      });\r\n    });\r\n  }\r\n  handleSelectChange = (selectedOption) => {\r\n    this.setState({ selectedOption })\r\n    this.props.onVocabSelected(selectedOption);\r\n  }\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <SearchIcon className={classes.block} color=\"inherit\" />\r\n            </Grid>\r\n\r\n            <FormControl className={this.props.classes.formControl}>\r\n              <Select\r\n                styles={selectStyles}\r\n                TextFieldProps={{ label: 'Ontology IRI', placeholder: 'Type to search for ontology' }}\r\n                options={this.state.selectOptions}\r\n                onChange={this.handleSelectChange}\r\n              />\r\n            </FormControl>\r\n            <Grid item>\r\n              <div className={classes.submitButton}>\r\n                {this.state.loading ? <CircularProgress size={20} /> :\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.props.onReloadClick}>\r\n                    <div className={classes.submitButtonContent}><Refresh style={{ fontSize: 24 }} />&nbsp;Reload</div>\r\n                  </Button>}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(VocabSelector);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport axios from 'axios';\r\nimport bluebird from 'bluebird';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { SPARQL_ENDPOINT_URL, PREFIXES, getQuerySchemaFragments, getQueryFragmentInstancesCount, getQueryFragmentInstances } from '../sparql';\r\nimport { axiosConfig } from '../network';\r\nimport { createIriLink, createLink } from '../utils';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FragmentsTable from './FragmentsTable';\r\nimport FragmentInstancesTable from './FragmentInstancesTable';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport chunk from 'lodash/chunk';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport VocabSelector from './VocabSelector';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  codeBlock: {\r\n    padding: '10px',\r\n    width: 'calc(100% - 24px)',\r\n    margin: '10px auto',\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#ccc',\r\n    height: 'auto',\r\n    border: 'none',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  dialogTitle: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  }\r\n});\r\nclass ClassFragmentsPage extends React.Component {\r\n  state = {\r\n    fragments: {},\r\n    selectedVocabOption: null,\r\n    loading: false,\r\n    fragmentInstances: null,\r\n    classFragment: null,\r\n    sparqlPreview: false,\r\n    showOnlyFullFragments: localStorage.getItem('preferences.showOnlyFullFragments') === 'true',\r\n  }\r\n  onVocabSelected = (selectedVocabOption) => {\r\n    this.setState({ selectedVocabOption }, () => {\r\n      this.fetchClassFragments();\r\n    });\r\n  }\r\n  handleInputChange = (name) => (e) => {\r\n    this.setState({ [name]: e.target.checked });\r\n    if (name === 'showOnlyFullFragments') {\r\n      localStorage.setItem('preferences.showOnlyFullFragments', e.target.checked);\r\n    }\r\n  };\r\n  fetchClassFragments = () => {\r\n    this.setState({ loading: true });\r\n    const payload = `query=${PREFIXES}${getQuerySchemaFragments(this.state.selectedVocabOption.value)}`;\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n      const fragments = {};\r\n      resp.data.results.bindings.forEach((binding) => {\r\n        const { s, sd, p, o, od } = binding;\r\n        const uuid = uuidv4();\r\n        const fragment = {\r\n          s: s ? s : sd || sd || null,\r\n          p,\r\n          o: o ? o : o || od || null,\r\n        };\r\n        fragment.i = fragment.s && fragment.o && fragment.p ? null : 0;\r\n        fragments[uuid] = fragment;\r\n      });\r\n      this.setState({ fragments, loading: false }, () => {\r\n        this.fetchFragmentInstances();\r\n      });\r\n    });\r\n  }\r\n  fetchFragmentInstances = () => {\r\n    const { fragments } = this.state;\r\n    const fragmentKeys = Object.keys(fragments).filter((key) => {\r\n      const { s, p, o } = fragments[key];\r\n      if (this.state.showOnlyFullFragments) {\r\n        return s && p && o;\r\n      }\r\n      return true;\r\n    });\r\n    const fragmentKeyGroups = chunk(fragmentKeys, 10);\r\n    bluebird.each(fragmentKeyGroups, (fkg) => {\r\n      const counts = {};\r\n      return bluebird.delay(500).then(() => {\r\n        return bluebird.map(fkg, (key) => {\r\n          const { s, p, o } = fragments[key];\r\n          if (s && p && o) {\r\n            const payload = `query=${PREFIXES}${getQueryFragmentInstancesCount(fragments[key])}`;\r\n            return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n              counts[key] = resp.data.results.bindings[0].n.value;\r\n            });\r\n          }\r\n          return bluebird.delay(0);\r\n        });\r\n      }).then(() => {\r\n        const newFragments = { ...fragments };\r\n        Object.keys(counts).forEach((countKey) => {\r\n          newFragments[countKey].i = counts[countKey];\r\n        });\r\n        this.setState({ fragments: newFragments });\r\n      });\r\n    });\r\n  };\r\n  showSparqlPreview = (query) => () => {\r\n    this.setState({ sparqlPreview: query });\r\n  }\r\n  showInstances = (key) => () => {\r\n    const { s, p, o } = this.state.fragments[key];\r\n    const payload = `query=${PREFIXES}${getQueryFragmentInstances(this.state.fragments[key])}`;\r\n    this.setState({ fragmentInstancesLoading: true });\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n      this.setState({\r\n        fragmentInstancesLoading: false,\r\n        fragmentInstances: resp.data.results.bindings,\r\n        classFragment: { s, p, o }\r\n      });\r\n    });\r\n  }\r\n  closeSparqlModal = () => {\r\n    this.setState({ sparqlPreview: false });\r\n  }\r\n  closeInstancesModal = () => {\r\n    this.setState({ fragmentInstances: null, classFragment: null });\r\n  }\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.controls}>\r\n          <Typography align=\"left\" variant=\"h5\">\r\n            Find class fragments\r\n          </Typography>\r\n          <div>\r\n            <FormControlLabel\r\n              control={<Switch checked={this.state.showOnlyFullFragments} onChange={this.handleInputChange('showOnlyFullFragments')} value=\"showOnlyFullFragments\" color=\"primary\" />}\r\n              label=\"Show only full fragments\"\r\n            />\r\n            <Button color=\"primary\" onClick={this.showSparqlPreview(getQuerySchemaFragments(this.state.selectedVocabOption ? this.state.selectedVocabOption.value : '__YOUR_SELECTED_VOCAB__').trim())}>View SPARQL&nbsp;<Visibility /></Button>\r\n          </div>\r\n        </div>\r\n        <Typography align=\"left\" variant=\"subtitle2\">\r\n          This tool will help you identify class fragments in a selected ontology and fetch their instances. Begin by selecting an ontology in the list below.\r\n        </Typography>\r\n        <Paper className={classes.paper}>\r\n          <VocabSelector onVocabSelected={this.onVocabSelected} onReloadClick={this.fetchClassFragments}/>\r\n          <Paper className={classes.root}>\r\n            <FragmentsTable\r\n              fragments={this.state.fragments}\r\n              showInstances={this.showInstances}\r\n              showOnlyFullFragments={this.state.showOnlyFullFragments}\r\n              vocabIsSelected={this.state.selectedVocabOption ? true : false}\r\n            />\r\n          </Paper>\r\n        </Paper>\r\n        <Dialog onClose={this.closeInstancesModal} open={this.state.fragmentInstances || this.state.fragmentInstancesLoading ? true : false} fullWidth={true} maxWidth=\"xl\">\r\n          <DialogTitle>\r\n            <div className={classes.dialogTitle}>\r\n              <span>Class fragment instances in {this.state.selectedVocabOption && createIriLink(this.state.selectedVocabOption.value)}</span>\r\n              {this.state.classFragment && <span><Button color=\"primary\" onClick={this.showSparqlPreview(getQueryFragmentInstances(this.state.classFragment).trim())}>View SPARQL&nbsp;<Visibility /></Button></span>}\r\n            </div>\r\n          </DialogTitle>\r\n          <FragmentInstancesTable fragmentInstancesLoading={this.state.fragmentInstancesLoading} fragmentInstances={this.state.fragmentInstances} classFragment={this.state.classFragment} />\r\n        </Dialog>\r\n        <Dialog onClose={this.closeSparqlModal} open={this.state.sparqlPreview ? true : false} fullWidth={true} maxWidth=\"md\">\r\n          <DialogTitle>\r\n            SPARQL query\r\n            <Typography variant=\"body2\">See also {createLink('https://github.com/nvbach91/iga-hybrid')}</Typography>\r\n          </DialogTitle>\r\n          <TextareaAutosize readOnly className={classes.codeBlock} defaultValue={this.state.sparqlPreview} />\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nClassFragmentsPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ClassFragmentsPage);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createIriLink } from '../utils';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport VirtualizedTable from './VirtualizedTable'\r\n\r\nconst tableHeadStyle = {\r\n  backgroundColor: 'white',\r\n  position: 'sticky',\r\n  top: 0,\r\n  fontWeight: 'bold',\r\n};\r\nconst styles = (theme) => ({\r\n  head: tableHeadStyle,\r\n  headLast: {\r\n    ...tableHeadStyle,\r\n    width: 150,\r\n  },\r\n  fragmentButton: {\r\n    padding: '4px 16px',\r\n    minWidth: 96,\r\n    justifyContent: 'flex-end',\r\n  }\r\n});\r\n\r\nconst CodeListsTable = ({ codeLists, showInstances, vocabIsSelected, classes }) => {\r\n  const mRows = codeLists ? Object.keys(codeLists).map((key, index) => {\r\n    const { d, p, c, n } = codeLists[key];\r\n    return { \r\n      id: key, \r\n      index: index + 1, \r\n      d: createIriLink(d ? d.value : ''), \r\n      p: createIriLink(p ? p.value : ''), \r\n      c: createIriLink(c ? c.value : ''), \r\n      n: n ? n.value : '', \r\n      i: n ? <Button className={classes.fragmentButton}  onClick={showInstances(key)} color=\"primary\">{n.value}&nbsp;<Visibility /></Button> : 0\r\n    };\r\n  }) : [];\r\n  return (\r\n    \r\n    <Paper style={{ height: 640, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={mRows.length}\r\n        rowGetter={({ index }) => mRows[index]}\r\n        columns={[\r\n          {\r\n            width: 100,\r\n            label: `(${mRows.length}) #`,\r\n            dataKey: 'index',\r\n            numeric: true,\r\n            align: 'right',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Domain',\r\n            dataKey: 'd',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Property',\r\n            dataKey: 'p',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Code list (Range)',\r\n            dataKey: 'c',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Members',\r\n            dataKey: 'n',\r\n          },\r\n          {\r\n            width: 150,\r\n            label: 'View',\r\n            dataKey: 'i',\r\n          },\r\n        ]}\r\n      />\r\n      {vocabIsSelected && !Object.keys(codeLists).length && <Typography variant=\"subtitle2\">No code lists found in this ontology</Typography>}\r\n    </Paper>\r\n    \r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(CodeListsTable);\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createIriLink } from '../utils';\r\nimport VirtualizedTable from './VirtualizedTable'\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n  head1: {\r\n    backgroundColor: 'white',\r\n    position: 'sticky',\r\n    top: 0\r\n  },\r\n  head2: {\r\n    backgroundColor: '#004b6e',\r\n    color: 'white',\r\n    position: 'sticky',\r\n    top: 40,\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\nconst CodeListInstancesTable = ({ loading, codeListInstances, codeList, classes }) => {\r\n  const mRows = codeListInstances ? codeListInstances.map((cli, index) => {\r\n    const { i, skosConcept } = cli;\r\n    return { id: index, index: index + 1, i: createIriLink(i.value), skosConcept: createIriLink(skosConcept ? skosConcept.value : 'Not a skos:Concept') };\r\n  }) : [];\r\n  return (\r\n    <Paper style={{ height: 640, width: '100%' }}>\r\n      {loading ?\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}><CircularProgress size={40} /></div> :\r\n        <VirtualizedTable\r\n          rowCount={mRows.length}\r\n          rowGetter={({ index }) => mRows[index]}\r\n          columns={[\r\n            {\r\n              width: 100,\r\n              label: `(${mRows.length}) #`,\r\n              dataKey: 'index',\r\n              numeric: true,\r\n              align: 'right',\r\n            },\r\n            {\r\n              flexGrow: 1,\r\n              width: 0,\r\n              label: 'Instance',\r\n              dataKey: 'i',\r\n            },\r\n            {\r\n              flexGrow: 1,\r\n              width: 0,\r\n              label: 'skos:Concept',\r\n              dataKey: 'skosConcept',\r\n            },\r\n          ]}\r\n        />\r\n      }\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(CodeListInstancesTable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport axios from 'axios';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { SPARQL_ENDPOINT_URL, PREFIXES, getQueryCodeListInstances, getQueryClassInstanceCounts } from '../sparql';\r\nimport { axiosConfig } from '../network';\r\nimport { createIriLink, createLink } from '../utils';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CodeListsTable from './CodeListsTable';\r\nimport CodeListInstancesTable from './CodeListInstancesTable';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport VocabSelector from './VocabSelector';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  codeBlock: {\r\n    padding: '10px',\r\n    width: 'calc(100% - 24px)',\r\n    margin: '10px auto',\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#ccc',\r\n    height: 'auto',\r\n    border: 'none',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  dialogTitle: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  }\r\n});\r\nclass CodeListsPage extends React.Component {\r\n  state = {\r\n    codeLists: {},\r\n    selectedVocabOption: null,\r\n    loading: false,\r\n    codeListInstances: null,\r\n    codeList: null,\r\n    sparqlPreview: false,\r\n  }\r\n  onVocabSelected = (selectedVocabOption) => {\r\n    this.setState({ selectedVocabOption }, () => {\r\n      this.fetchCodeLists();\r\n    });\r\n  }\r\n  fetchCodeLists = () => {\r\n    this.setState({ loading: true });\r\n    const payload = `query=${PREFIXES}${getQueryClassInstanceCounts(this.state.selectedVocabOption.value)}`;\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n      const codeLists = {};\r\n      resp.data.results.bindings.filter((binding) => binding.n.value > 0).forEach((binding) => {\r\n        const { d, p, c, n } = binding;\r\n        const uuid = uuidv4();\r\n        const codeList = { d, p, c, n };\r\n        codeList.i = 0;\r\n        codeLists[uuid] = codeList;\r\n      });\r\n      this.setState({ codeLists, loading: false });\r\n    });\r\n  }\r\n  showSparqlPreview = (query) => () => {\r\n    this.setState({ sparqlPreview: query });\r\n  }\r\n  showInstances = (key) => () => {\r\n    const { c } = this.state.codeLists[key];\r\n    const payload = `query=${PREFIXES}${getQueryCodeListInstances(c.value, this.state.selectedVocabOption.value)}`;\r\n    this.setState({ codeListInstancesLoading: true });\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n      this.setState({\r\n        codeListInstancesLoading: false,\r\n        codeListInstances: resp.data.results.bindings,\r\n        codeList: c,\r\n      });\r\n    });\r\n  }\r\n  closeSparqlModal = () => {\r\n    this.setState({ sparqlPreview: false });\r\n  }\r\n  closeInstancesModal = () => {\r\n    this.setState({ codeListInstances: null, codeList: null });\r\n  }\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.controls}>\r\n          <Typography align=\"left\" variant=\"h5\">\r\n            Find code lists\r\n          </Typography>\r\n          <div>\r\n            <Button color=\"primary\" onClick={this.showSparqlPreview(getQueryClassInstanceCounts(this.state.selectedVocabOption ? this.state.selectedVocabOption.value : '__YOUR_SELECTED_VOCAB__').trim())}>View SPARQL&nbsp;<Visibility /></Button>\r\n          </div>\r\n        </div>\r\n        <Typography align=\"left\" variant=\"subtitle2\">\r\n          This tool will help you identify code lists embedded in a vocabulary\r\n        </Typography>\r\n        <Paper className={classes.paper}>\r\n          <VocabSelector onVocabSelected={this.onVocabSelected} onReloadClick={this.fetchCodeLists}/>\r\n          <Paper className={classes.root}>\r\n            <CodeListsTable\r\n              codeLists={this.state.codeLists}\r\n              showInstances={this.showInstances}\r\n              vocabIsSelected={this.state.selectedVocabOption ? true : false}\r\n            />\r\n          </Paper>\r\n        </Paper>\r\n        <Dialog onClose={this.closeInstancesModal} open={this.state.codeListInstances || this.state.codeListInstancesLoading ? true : false} fullWidth={true} maxWidth=\"xl\">\r\n          <DialogTitle>\r\n            <div className={classes.dialogTitle}>\r\n              <span>Vocabulary: {this.state.selectedVocabOption && createIriLink(this.state.selectedVocabOption.value)}</span>\r\n              {this.state.codeList && <span><Button color=\"primary\" onClick={this.showSparqlPreview(getQueryCodeListInstances(this.state.codeList.value,  this.state.selectedVocabOption.value).trim())}>View SPARQL&nbsp;<Visibility /></Button></span>}\r\n            </div>\r\n            <div className={classes.dialogTitle}>\r\n              <span>Code list: {this.state.codeList && createIriLink(this.state.codeList.value)}</span>\r\n            </div>\r\n          </DialogTitle>\r\n          <CodeListInstancesTable loading={this.state.codeListInstancesLoading} codeListInstances={this.state.codeListInstances} codeList={this.state.codeList} />\r\n        </Dialog>\r\n        <Dialog onClose={this.closeSparqlModal} open={this.state.sparqlPreview ? true : false} fullWidth={true} maxWidth=\"md\">\r\n          <DialogTitle>\r\n            SPARQL query\r\n            <Typography variant=\"body2\">See also {createLink('https://github.com/nvbach91/iga-hybrid')}</Typography>\r\n          </DialogTitle>\r\n          <TextareaAutosize readOnly className={classes.codeBlock} defaultValue={this.state.sparqlPreview} />\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCodeListsPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CodeListsPage);\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { createIriLink, createLink } from '../utils';\r\nimport VirtualizedTable from './VirtualizedTable'\r\n\r\nexport default function PrefixesTable({ rows }) {\r\n  const mRows = rows.map((prefix) => {\r\n    const iri = window.cached.prefixes[prefix];\r\n    return { id: prefix, prefix: createIriLink(iri), iri: createLink(iri) };\r\n  })\r\n  return (\r\n    <Paper style={{ height: 400, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={mRows.length}\r\n        rowGetter={({ index }) => mRows[index]}\r\n        columns={[\r\n          {\r\n            width: 200,\r\n            label: 'Prefix',\r\n            dataKey: 'prefix',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'IRI',\r\n            dataKey: 'iri',\r\n          },\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PrefixesTable from './PrefixesTable';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createLink } from '../utils';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  formControl: {\r\n    flexGrow: 1\r\n  },\r\n});\r\nclass PrefixesPage extends React.Component {\r\n  state = {\r\n    searchValue: '',\r\n    rows: Object.keys(window.cached.prefixes),\r\n  }\r\n  handleInputChange = (name) => (e) => {\r\n    this.setState({ \r\n      [name]: e.target.value, \r\n      rows: Object.keys(window.cached.prefixes).filter((prefix) => {\r\n        return prefix.toLowerCase().includes(e.target.value.trim().toLowerCase());\r\n      }) \r\n    });\r\n  }\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n      <Typography align=\"left\" variant=\"h5\">\r\n        Search for prefixes\r\n      </Typography>\r\n      <Typography align=\"left\" variant=\"subtitle2\">\r\n        These prefixes come from {createLink('https://prefix.cc/context')}\r\n      </Typography>\r\n        <Paper className={classes.paper}>\r\n          <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n            <Toolbar>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <SearchIcon className={classes.block} color=\"inherit\" />\r\n                </Grid>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField value={this.state.searchValue} onChange={this.handleInputChange('searchValue')} />\r\n                </FormControl>\r\n              </Grid>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper className={classes.root}>\r\n            <PrefixesTable rows={this.state.rows}/>\r\n          </Paper>\r\n        </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPrefixesPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PrefixesPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = theme => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle, onTabSwitch, tabIndex } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton color=\"inherit\" aria-label=\"Open drawer\" onClick={onDrawerToggle} className={classes.menuButton}>\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts • No alters\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar\r\n                  className={classes.avatar}\r\n                  src=\"favicon.png\"\r\n                  alt=\"avatar\"\r\n                />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                LOV Analyzer\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={tabIndex} textColor=\"inherit\">\r\n          <Tab textColor=\"inherit\" label=\"Code lists\" onClick={onTabSwitch(0)}/>\r\n          <Tab textColor=\"inherit\" label=\"Class Fragments\" onClick={onTabSwitch(1)}/>\r\n          <Tab textColor=\"inherit\" label=\"Prefixes\" onClick={onTabSwitch(2)}/>\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Navigator from './Navigator';\r\nimport ClassFragmentsPage from './ClassFragmentsPage';\r\nimport CodeListsPage from './CodeListsPage';\r\nimport PrefixesPage from './PrefixesPage';\r\nimport Header from './Header';\r\n\r\nlet theme = createMuiTheme({\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#009be5',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        backgroundColor: '#18202c',\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: 'none',\r\n      },\r\n      contained: {\r\n        boxShadow: 'none',\r\n        '&:active': {\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      indicator: {\r\n        height: 3,\r\n        borderTopLeftRadius: 3,\r\n        borderTopRightRadius: 3,\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none',\r\n        margin: '0 16px',\r\n        minWidth: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up('md')]: {\r\n          padding: 0,\r\n          minWidth: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: '#404854',\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color: 'inherit',\r\n        marginRight: 0,\r\n        '& svg': {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      root: {\r\n        width: 32,\r\n        height: 32,\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  mixins: {\r\n    ...theme.mixins,\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 192;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appPage: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  mainPage: {\r\n    flex: 1,\r\n    padding: '48px 36px 0',\r\n    background: '#eaeff1',\r\n  },\r\n};\r\n\r\nclass Paperbase extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n    tabIndex: 0,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n  handleTabSwitch = (tabIndex) => () => {\r\n    this.setState({ tabIndex });\r\n  }\r\n  renderPage = () => {\r\n    switch (this.state.tabIndex) {\r\n      case 0: return <CodeListsPage />;\r\n      case 1: return <ClassFragmentsPage />;\r\n      case 2: return <PrefixesPage />;\r\n      default: return <ClassFragmentsPage />;\r\n    }\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <nav className={classes.drawer}>\r\n            <Hidden smUp implementation=\"js\">\r\n              <Navigator\r\n                PaperProps={{ style: { width: drawerWidth } }}\r\n                variant=\"temporary\"\r\n                open={this.state.mobileOpen}\r\n                onClose={this.handleDrawerToggle}\r\n              />\r\n            </Hidden>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n            </Hidden>\r\n          </nav>\r\n          <div className={classes.appPage}>\r\n            <Header onDrawerToggle={this.handleDrawerToggle} onTabSwitch={this.handleTabSwitch} tabIndex={this.state.tabIndex}/>\r\n            <main className={classes.mainPage}>\r\n              {this.renderPage()}\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nPaperbase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Paperbase);","import React from 'react';\r\nimport Paperbase from './Paperbase';\r\nimport '../css/App.css';\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n  componentWillMount = () => {\r\n    axios.get('https://prefix.cc/context').then((resp) => {\r\n      window.cached.prefixes = resp.data['@context'];\r\n      window.cached.reversePrefixes = {};\r\n      Object.keys(window.cached.prefixes).forEach((prefix) => {\r\n        window.cached.reversePrefixes[window.cached.prefixes[prefix]] = prefix;\r\n      });\r\n    });\r\n  }\r\n  render = () => (\r\n    <div className=\"App\">\r\n      <Paperbase />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css//index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nwindow.cached = {};\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}