{"version":3,"sources":["components/Navigator.js","sparql.js","network.js","utils.js","components/VirtualizedTable.js","components/FragmentsTable.js","components/FragmentInstancesTable.js","components/AnalyzerPage.js","components/PrefixesTable.js","components/PrefixesPage.js","components/Header.js","components/Paperbase.js","components/App.js","serviceWorker.js","index.js"],"names":["categories","id","children","icon","react_default","a","createElement","SettingsInputComponent_default","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","&:hover,&:focus","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Object","objectWithoutProperties","Drawer","assign","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","Home_default","ListItemText","primary","map","_ref","Fragment","key","_ref2","childId","button","Divider","SPARQL_ENDPOINT_URL","prefixes","vann","voaf","rdfs","owl","skos","rdf","PREFIXES","keys","prefix","concat","join","getQueryFragmentInstances","s","p","o","value","startsWith","getQueryConnectedSchemas","iri","axiosConfig","headers","accept","accept-language","content-type","fetchIris","payload","axios","post","createIriLink","test","Link","href","target","rel","window","reversePrefixes","i","length","slice","shortenIri","MuiVirtualizedTable","getRowClassName","index","_this$props","_this","onRowClick","tableRow","flexContainer","defineProperty","tableRowHover","cellRenderer","cellData","columnIndex","_this$props2","columns","rowHeight","TableCell","component","tableCell","noClick","style","height","align","numeric","headerRenderer","_ref3","label","_this$props3","headerHeight","_this2","this","_this$props4","tableProps","es","_ref4","width","size","rowClassName","_ref5","dataKey","headerProps","objectSpread","React","PureComponent","defaultProps","display","alignItems","boxSizing","cursor","&:hover","grey","flex","tableHeadStyle","position","top","fontWeight","head","headLast","fragmentButton","padding","fragments","showInstances","showOnlyFullFragments","ontologySelected","mRows","filter","_fragments$key","_fragments$key2","CircularProgress","Button","onClick","title","Visibility_default","Paper","VirtualizedTable","rowCount","rowGetter","flexGrow","Typography","head1","head2","fragmentInstances","classFragment","fi","selectStyles","option","styles","data","isDisabled","isFocused","isSelected","textAlign","AnalyzerPage","state","selectedOption","selectOptions","loading","sparqlPreview","localStorage","getItem","componentDidMount","then","resp","iris","results","bindings","binding","vocabURI","vocabLabel","nClass","nInd","setState","handleSelectOptionChange","fetchConnectedSchemas","handleInputChange","name","e","checked","setItem","forEach","sd","od","uuid","uuidv4","fragment","fetchFragmentInstances","fragmentKeys","fragmentKeyGroups","chunk","bluebird","each","fkg","delay","newFragments","showSparqlPreview","_this$state$fragments","closeModal","render","controls","FormControlLabel","control","Switch","onChange","paper","AppBar","searchBar","elevation","Toolbar","Grid","container","Search_default","block","FormControl","formControl","react_select_browser_esm","inputId","TextFieldProps","placeholder","options","submitButton","submitButtonContent","Refresh_default","root","components_FragmentsTable","Dialog","onClose","open","fullWidth","maxWidth","DialogTitle","components_FragmentInstancesTable","codeBlock","trim","Component","margin","borderBottom","justifyContent","PrefixesTable","rows","PrefixesPage","searchValue","_this$setState","toLowerCase","includes","TextField","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","link","textDecoration","borderColor","onDrawerToggle","onTabSwitch","tabIndex","Hidden","smUp","IconButton","aria-label","Menu_default","xs","Tooltip","Notifications_default","Avatar","avatar","src","alt","Help_default","Tabs","textColor","Tab","createMuiTheme","typography","h5","letterSpacing","light","main","dark","shape","borderRadius","overrides","MuiDrawer","MuiButton","textTransform","contained","&:active","MuiTabs","indicator","borderTopLeftRadius","borderTopRightRadius","MuiTab","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","& svg","MuiAvatar","disableRipple","mixins","toolbar","minHeight","drawer","flexShrink","appAnalyzerPage","flexDirection","mainAnalyzerPage","background","Paperbase","mobileOpen","handleDrawerToggle","handleTabSwitch","renderAnalyzerPage","components_AnalyzerPage","components_PrefixesPage","ThemeProvider","CssBaseline","implementation","components_Navigator","PaperProps","xsDown","components_Header","App","componentWillMount","get","components_Paperbase","Boolean","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d6ae27e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\n\r\nconst categories = [\r\n  {\r\n    id: 'Develop',\r\n    children: [\r\n      { id: 'LOV Analyzer', icon: <SettingsInputComponentIcon />, active: true },\r\n    ],\r\n  }\r\n];\r\n\r\nconst styles = theme => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    '&:hover,&:focus': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: '#232f3e',\r\n    boxShadow: '0 -1px 0 #404854 inset',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: '#4fc3f7',\r\n  },\r\n  itemPrimary: {\r\n    fontSize: 'inherit',\r\n  },\r\n  itemIcon: {\r\n    minWidth: 'auto',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction Navigator(props) {\r\n  const { classes, ...other } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          IGA HYBRID\r\n        </ListItem>\r\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.itemPrimary,\r\n            }}\r\n          >\r\n            Project Overview\r\n          </ListItemText>\r\n        </ListItem>\r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);","export const SPARQL_ENDPOINT_URL = 'https://lov.linkeddata.es/dataset/lov/sparql';\r\nexport const prefixes = {\r\n  vann:     'http://purl.org/vocab/vann/',\r\n  voaf:     'http://purl.org/vocommons/voaf#',\r\n  rdfs:     'http://www.w3.org/2000/01/rdf-schema#',\r\n  owl:      'http://www.w3.org/2002/07/owl#',\r\n  skos:     'http://www.w3.org/2004/02/skos/core#',\r\n  rdf:      'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\r\n};\r\n\r\n// export const reversePrefixes = {};\r\n// Object.keys(prefixes).forEach((prefix) => {\r\n//   reversePrefixes[prefixes[prefix]] = prefix;\r\n// });\r\n\r\nexport const PREFIXES = Object.keys(prefixes).map((prefix) => `PREFIX ${prefix}: <${prefixes[prefix]}>`).join('\\n') + '\\n';\r\n\r\n//export const FROMS = Object.keys(reversePrefixes).map((rp) => `FROM <${rp.slice(0, -1)}>\\nFROM <${rp}>`).join('\\n') + '\\n';\r\n\r\nexport const getQueryVocabs = () => `\r\nSELECT DISTINCT ?vocabPrefix ?vocabURI {\r\n \tGRAPH <https://lov.linkeddata.es/dataset/lov> {\r\n \t \t?vocabURI a voaf:Vocabulary.\r\n \t \t?vocabURI vann:preferredNamespacePrefix ?vocabPrefix.\r\n  }\r\n}\r\nORDER BY ?vocabPrefix\r\n`;\r\n\r\nexport const getQueryIris = () => `\r\nSELECT DISTINCT ?vocabURI ?vocabLabel (COUNT (?class) AS ?nClass) (COUNT (?ind) AS ?nInd) {\r\n  ?vocabURI a voaf:Vocabulary.\r\n  ?vocabURI vann:preferredNamespacePrefix ?vocabPrefix.\r\n  OPTIONAL { \r\n    ?vocabURI rdfs:label ?vocabLabel .\r\n    FILTER(LANGMATCHES(LANG(?vocabLabel), 'en') || LANGMATCHES(LANG(?vocabLabel), ''))\r\n  }\r\n  ?class a owl:Class .\r\n  ?class rdfs:isDefinedBy ?vocabURI .\r\n  OPTIONAL {\r\n    ?ind a ?class .\r\n  }\r\n} GROUP BY ?vocabURI ?vocabLabel ORDER BY DESC(?nClass)\r\n`;\r\n\r\nexport const getQueryFragmentInstances = (s, p, o) => `\r\nSELECT DISTINCT ?s ?p ?o\r\nWHERE {\r\n  BIND(<${p.value}> AS ?p) .\r\n  ?s a <${s.value}> .\r\n  ${o.value.startsWith('http://www.w3.org/2001/XMLSchema#') ? '' : `?o a <${o.value}> .`}\r\n  ?s ?p ?o .\r\n}\r\n#LIMIT 25\r\n`;\r\nexport const getQueryConnectedSchemas = (iri) => `\r\nSELECT \r\n?s ?sp ?sd ?p ?o ?op ?od\r\nFROM <http://purl.org/dc/terms/>\r\nFROM <http://purl.org/vocab/vann/>\r\nFROM <http://www.w3.org/2004/02/skos/core>\r\nFROM <http://purl.org/dc/elements/1.1/>\r\nFROM <http://creativecommons.org/ns>\r\nFROM <http://xmlns.com/foaf/0.1/>\r\nFROM <http://schema.org/>\r\nFROM <http://www.w3.org/ns/prov#>\r\nFROM <${iri}>\r\nWHERE {\r\n  ?p rdfs:isDefinedBy <${iri}> .\r\n  VALUES ?pt { owl:ObjectProperty owl:DatatypeProperty rdf:Property } .\r\n  ?p a ?pt .\r\n  OPTIONAL {\r\n    ?p rdfs:domain ?s .\r\n    OPTIONAL {\r\n      ?p rdfs:subPropertyOf ?op .\r\n        OPTIONAL { ?op rdfs:range ?od . }\r\n    }\r\n  }\r\n  OPTIONAL {\r\n    ?p rdfs:range ?o .\r\n    OPTIONAL {\r\n      ?p rdfs:subPropertyOf ?sp .\r\n      OPTIONAL { ?sp rdfs:domain ?sd . }\r\n    }\r\n  }\r\n}\r\nORDER BY ?s\r\n`;\r\n\r\nexport const getQueryMetadata = (iri) => `\r\nSELECT ?label ?ontology ?comment ?definition WHERE {\r\n  BIND (<${iri}> AS ?entity).\r\n  ?entity rdfs:label ?label .\r\n  OPTIONAL { ?entity rdfs:isDefinedBy ?ontology }\r\n  OPTIONAL { ?entity rdfs:comment ?comment }\r\n  OPTIONAL { ?entity skos:definition ?definition }\r\n}\r\n`;","import axios from 'axios';\r\nimport { SPARQL_ENDPOINT_URL, PREFIXES, getQueryIris } from './sparql'\r\nexport const axiosConfig = {\r\n  headers: { \r\n    \"accept\": \"application/sparql-results+json,*/*;q=0.9\", \r\n    \"accept-language\": \"en-US,en;q=0.9\", \r\n    \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\", \r\n  }\r\n};\r\n\r\nexport const fetchIris = () => {\r\n    const payload = `query=${PREFIXES}${getQueryIris()}`;\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig)\r\n};","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport const debounce = (fn, time) => {\r\n  let timeout;\r\n  return function () {\r\n    const functionCall = () => fn.apply(this, arguments);\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(functionCall, time);\r\n  }\r\n};\r\n\r\nexport const shortenIri = (iri) => {\r\n  const prefixes = Object.keys(window.reversePrefixes);\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    let prefix = prefixes[i];\r\n    if (iri.startsWith(prefix)) {\r\n      if (iri.length === prefix.length) {\r\n        return window.reversePrefixes[prefix];\r\n      }\r\n      return `${window.reversePrefixes[prefix]}:${iri.slice(prefix.length)}`;\r\n    }\r\n  }\r\n  return iri;\r\n};\r\n\r\nexport const createIriLink = (iri) => {\r\n  if (!/^https?:\\/\\//.test(iri)) {\r\n    return iri;\r\n  }\r\n  return <Link href={iri} target=\"_blank\" rel=\"noopener noreferrer\">{shortenIri(iri)}</Link>;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst styles = theme => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table size=\"small\" height={height} width={width} {...tableProps} rowClassName={this.getRowClassName}>\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={headerProps =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nexport default withStyles(styles)(MuiVirtualizedTable);\r\n","import React from 'react';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createIriLink } from '../utils';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport VirtualizedTable from './VirtualizedTable'\r\n\r\nconst tableHeadStyle = {\r\n  backgroundColor: 'white',\r\n  position: 'sticky',\r\n  top: 0,\r\n  fontWeight: 'bold',\r\n};\r\nconst styles = (theme) => ({\r\n  head: tableHeadStyle,\r\n  headLast: {\r\n    ...tableHeadStyle,\r\n    width: 150,\r\n  },\r\n  fragmentButton: {\r\n    padding: '4px 16px'\r\n  }\r\n});\r\n\r\nconst FragmentsTable = ({ fragments, showInstances, showOnlyFullFragments, ontologySelected, classes }) => {\r\n  const mRows = fragments ? Object.keys(fragments).filter((key) => {\r\n    if (showOnlyFullFragments) {\r\n      const { s, p, o } = fragments[key];\r\n      return s && p && o;\r\n    }\r\n    return true\r\n  }).map((key, index) => {\r\n    const { s, p, o, i } = fragments[key];\r\n    return { \r\n      id: key, \r\n      index: index + 1, \r\n      s: createIriLink(s ? s.value : ''), \r\n      p: createIriLink(p ? p.value : ''), \r\n      o: createIriLink(o ? o.value : ''),\r\n      i: i === null ?\r\n        <CircularProgress size={26} /> :\r\n        <Button className={classes.fragmentButton} variant={i.length ? 'contained' : 'text'} onClick={showInstances(key)} color=\"primary\" title={`Show ${i.length} instances` }>\r\n          {i.length}{i.length ? <span>&nbsp;</span> : ''}{i.length ? <Visibility /> : ''}\r\n        </Button>\r\n    };\r\n  }) : [];\r\n  return (\r\n    \r\n    <Paper style={{ height: 640, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={mRows.length}\r\n        rowGetter={({ index }) => mRows[index]}\r\n        columns={[\r\n          {\r\n            width: 100,\r\n            label: `(${mRows.length}) #`,\r\n            dataKey: 'index',\r\n            numeric: true,\r\n            align: 'right',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Subject',\r\n            dataKey: 's',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Predicate',\r\n            dataKey: 'p',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'Object',\r\n            dataKey: 'o',\r\n          },\r\n          {\r\n            width: 150,\r\n            label: 'Instances',\r\n            dataKey: 'i',\r\n          },\r\n        ]}\r\n      />\r\n      {ontologySelected && !Object.keys(fragments).length && <Typography variant=\"subtitle2\">No class fragment found in this ontology</Typography>}\r\n    </Paper>\r\n    \r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(FragmentsTable);\r\n/*<Table size=\"small\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell className={classes.head} align=\"left\">Subject</TableCell>\r\n          <TableCell className={classes.head} align=\"left\">Predicate</TableCell>\r\n          <TableCell className={classes.head} align=\"left\">Object</TableCell>\r\n          <TableCell className={classes.headLast} align=\"right\" title=\"The number of instantiated triples\">Instances</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {Object.keys(fragments).filter((key) => {\r\n          if (showOnlyFullFragments) {\r\n            const { s, p, o } = fragments[key];\r\n            return s && p && o;\r\n          }\r\n          return true;\r\n        }).map((key) => {\r\n          const { s, p, o, i } = fragments[key];\r\n          return (\r\n            <TableRow key={key}>\r\n              <TableCell align=\"left\">{s ? createIriLink(s.value) : ''}</TableCell>\r\n              <TableCell align=\"left\">{p ? createIriLink(p.value) : ''}</TableCell>\r\n              <TableCell align=\"left\">{o ? createIriLink(o.value) : ''}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {\r\n                  i === null ?\r\n                    <CircularProgress size={26} /> :\r\n                    <Button className={classes.fragmentButton} variant={i.length ? 'contained' : 'text'} onClick={showInstances(key)} color=\"primary\" title={`Show ${i.length} instances` }>\r\n                      {i.length}{i.length ? <span>&nbsp;</span> : ''}{i.length ? <Visibility /> : ''}\r\n                    </Button>\r\n                }\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n        {ontologySelected && !Object.keys(fragments).length && \r\n          <TableRow>\r\n            <TableCell align=\"left\"><Typography variant=\"subtitle2\">No class fragment found in this ontology</Typography></TableCell>\r\n          </TableRow>}\r\n      </TableBody>\r\n        </Table>*/","import React from 'react';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createIriLink } from '../utils';\r\nimport VirtualizedTable from './VirtualizedTable'\r\n\r\nconst styles = (theme) => ({\r\n  head1: {\r\n    backgroundColor: 'white',\r\n    position: 'sticky',\r\n    top: 0\r\n  },\r\n  head2: {\r\n    backgroundColor: '#004b6e',\r\n    color: 'white',\r\n    position: 'sticky',\r\n    top: 40,\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\nconst FragmentInstancesTable = ({ fragmentInstances, classFragment, classes }) => {\r\n  const mRows = fragmentInstances ? fragmentInstances.map((fi, index) => {\r\n    const { s, p, o } = fi;\r\n    return { id: index, index: index + 1, s: createIriLink(s.value), p: createIriLink(p.value), o: createIriLink(o.value) };\r\n  }) : [];\r\n  return (\r\n    <Paper style={{ height: 640, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={mRows.length}\r\n        rowGetter={({ index }) => mRows[index]}\r\n        columns={[\r\n          {\r\n            width: 100,\r\n            label: `(${mRows.length}) #`,\r\n            dataKey: 'index',\r\n            numeric: true,\r\n            align: 'right',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: <span>Subject class&nbsp;({createIriLink(classFragment ? classFragment.s.value : '')})</span>,\r\n            dataKey: 's',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: <span>Predicate&nbsp;({createIriLink(classFragment ? classFragment.p.value : '')})</span>,\r\n            dataKey: 'p',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: <span>Object class&nbsp;({createIriLink(classFragment ? classFragment.o.value : '')})</span>,\r\n            dataKey: 'o',\r\n          },\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n  /*return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell align=\"right\" className={classes.head1} style={{ width: 150 }}>#</TableCell>\r\n          <TableCell className={classes.head1}>Subject</TableCell>\r\n          <TableCell className={classes.head1}>Predicate</TableCell>\r\n          <TableCell className={classes.head1}>Object</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align=\"right\" className={classes.head2}>Class fragment</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.s ? createIriLink(classFragment.s.value) : ''}</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.p ? createIriLink(classFragment.p.value) : ''}</TableCell>\r\n          <TableCell className={classes.head2}>{classFragment && classFragment.o ? createIriLink(classFragment.o.value) : ''}</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {fragmentInstances && fragmentInstances.map((fi, index) => {\r\n          const { s, p, o } = fi;\r\n          return (\r\n            <TableRow key={index}>\r\n              <TableCell align=\"right\">{index + 1}</TableCell>\r\n              <TableCell>{createIriLink(s.value)}</TableCell>\r\n              <TableCell>{createIriLink(p.value)}</TableCell>\r\n              <TableCell>{createIriLink(o.value)}</TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n        {fragmentInstances && !fragmentInstances.length && (\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell align=\"left\">No instances available</TableCell>\r\n            <TableCell></TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n  );*/\r\n}\r\n\r\nexport default withStyles(styles)(FragmentInstancesTable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport Refresh from '@material-ui/icons/Refresh';\r\nimport axios from 'axios';\r\nimport bluebird from 'bluebird';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { SPARQL_ENDPOINT_URL, PREFIXES, getQueryConnectedSchemas, getQueryFragmentInstances } from '../sparql';\r\nimport { axiosConfig, fetchIris } from '../network';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FragmentsTable from './FragmentsTable';\r\nimport FragmentInstancesTable from './FragmentInstancesTable';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport chunk from 'lodash/chunk';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  submitButton: {\r\n    marginRight: theme.spacing(1),\r\n    minWidth: '100px',\r\n  },\r\n  submitButtonContent: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  formControl: {\r\n    flexGrow: 1\r\n  },\r\n  codeBlock: {\r\n    padding: '10px',\r\n    width: 'calc(100% - 24px)',\r\n    margin: '10px auto',\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#ccc',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  }\r\n});\r\nconst selectStyles = {\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    return {\r\n      ...styles,\r\n      textAlign: 'left',\r\n      padding: '10px'\r\n    };\r\n  },\r\n};\r\nclass AnalyzerPage extends React.Component {\r\n  state = {\r\n    fragments: {},\r\n    selectedOption: null,\r\n    selectOptions: [],\r\n    loading: true,\r\n    fragmentInstances: null,\r\n    classFragment: null,\r\n    sparqlPreview: false,\r\n    showOnlyFullFragments: localStorage.getItem('preferences.showOnlyFullFragments') === 'true',\r\n  }\r\n  componentDidMount = () => {\r\n    fetchIris().then((resp) => {\r\n      const iris = resp.data.results.bindings.map((binding) => {\r\n        return {\r\n          iri: binding.vocabURI.value,\r\n          label: binding.vocabLabel ? binding.vocabLabel.value : '',\r\n          nClass: binding.nClass.value,\r\n          nInd: binding.nInd.value,\r\n        }\r\n      });\r\n      this.setState({ \r\n        loading: false, \r\n        selectOptions: iris.map(({ iri, label, nClass, nInd }) => {\r\n          return { value: iri, label: `${iri}${label ? ` - ${label}` : ''}, classes: ${nClass}, instances: ${nInd}` };\r\n        }) \r\n      });\r\n    });\r\n  }\r\n  handleSelectOptionChange = (selectedOption) => {\r\n    this.setState({ selectedOption }, () => {\r\n      this.fetchConnectedSchemas();\r\n    });\r\n  }\r\n  handleInputChange = (name) => (e) => {\r\n    this.setState({ [name]: e.target.checked });\r\n    if (name === 'showOnlyFullFragments') {\r\n      localStorage.setItem('preferences.showOnlyFullFragments', e.target.checked);\r\n    }\r\n  };\r\n  fetchConnectedSchemas = () => {\r\n    this.setState({ loading: true });\r\n    const payload = `query=${PREFIXES}${getQueryConnectedSchemas(this.state.selectedOption.value)}`;\r\n    return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n      const fragments = {};\r\n      resp.data.results.bindings.forEach((binding) => {\r\n        const { s, sd, p, o, od } = binding;\r\n        const uuid = uuidv4();\r\n        const fragment = {\r\n          s: s ? s : sd || sd || null,\r\n          p,\r\n          o: o ? o : o || od || null,\r\n        };\r\n        fragment.i = fragment.s && fragment.o && fragment.p ? null : [];\r\n        fragments[uuid] = fragment;\r\n      });\r\n      this.setState({ fragments, loading: false }, () => {\r\n        this.fetchFragmentInstances();\r\n      });\r\n    });\r\n  }\r\n  fetchFragmentInstances = () => {\r\n    const { fragments } = this.state;\r\n    const fragmentKeys = Object.keys(fragments).filter((key) => {\r\n      const { s, p, o } = fragments[key];\r\n      if (this.state.showOnlyFullFragments) {\r\n        return s && p && o;\r\n      }\r\n      return true;\r\n    });\r\n    const fragmentKeyGroups = chunk(fragmentKeys, 5);\r\n    bluebird.each(fragmentKeyGroups, (fkg) => {\r\n      return bluebird.delay(500).then(() => {\r\n        return bluebird.map(fkg, (key) => {\r\n          const { s, p, o } = fragments[key];\r\n          if (s && p && o) {\r\n            const payload = `query=${PREFIXES}${getQueryFragmentInstances(s, p, o)}`;\r\n            return axios.post(SPARQL_ENDPOINT_URL, payload, axiosConfig).then((resp) => {\r\n              const newFragments = { ...fragments };\r\n              newFragments[key].i = resp.data.results.bindings;\r\n              this.setState({ fragments: newFragments });\r\n            });\r\n          }\r\n          return bluebird.delay(0);\r\n        });\r\n      });\r\n    });\r\n  };\r\n  showSparqlPreview = () => {\r\n    this.setState({ sparqlPreview: true });\r\n  }\r\n  showInstances = (key) => () => {\r\n    const { i, s, p, o } = this.state.fragments[key];\r\n    this.setState({ fragmentInstances: i,  classFragment: { s, p, o } });\r\n  }\r\n  closeModal = () => {\r\n    this.setState({ fragmentInstances: null, classFragment: null, sparqlPreview: false });\r\n  }\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.controls}>\r\n          <Typography align=\"left\" variant=\"h5\">\r\n            Find class fragments \r\n          </Typography>\r\n          <div>\r\n            <FormControlLabel\r\n              control={ <Switch checked={this.state.showOnlyFullFragments} onChange={this.handleInputChange('showOnlyFullFragments')} value=\"showOnlyFullFragments\" color=\"primary\" />}\r\n              label=\"Show only full fragments\"\r\n            />\r\n            <Button color=\"primary\" onClick={this.showSparqlPreview}>View SPARQL&nbsp;<Visibility /></Button>\r\n          </div>\r\n        </div>\r\n        <Typography align=\"left\" variant=\"subtitle2\">\r\n          This tool will help you identify class fragments in a selected ontology and fetch their instances. Begin by selecting an ontology in the list below.\r\n        </Typography>\r\n        <Paper className={classes.paper}>\r\n          <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n            <Toolbar>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <SearchIcon className={classes.block} color=\"inherit\" />\r\n                </Grid>\r\n                <FormControl className={classes.formControl}>\r\n                  <Select \r\n                    classes={classes}\r\n                    styles={selectStyles}\r\n                    inputId=\"react-select-input\"\r\n                    TextFieldProps={{ label: 'Ontology IRI', placeholder: 'Type to search for ontology' }}\r\n                    options={this.state.selectOptions}\r\n                    value={this.state.selectedOption}\r\n                    onChange={this.handleSelectOptionChange}\r\n                  />\r\n                </FormControl>\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"primary\" className={classes.submitButton} onClick={this.fetchConnectedSchemas}>\r\n                    {this.state.loading ? <CircularProgress size={20} /> : <div className={classes.submitButtonContent}><Refresh style={{ fontSize: 24 }}/>&nbsp;Reload</div>}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper className={classes.root}>\r\n            <FragmentsTable \r\n              fragments={this.state.fragments} \r\n              showInstances={this.showInstances} \r\n              showOnlyFullFragments={this.state.showOnlyFullFragments}\r\n              ontologySelected={this.state.selectedOption ? true : false}\r\n            />\r\n          </Paper>\r\n        </Paper>\r\n        <Dialog onClose={this.closeModal} open={this.state.fragmentInstances ? true : false} fullWidth={true} maxWidth=\"xl\">\r\n          <DialogTitle>Class fragment instances</DialogTitle>\r\n          <FragmentInstancesTable fragmentInstances={this.state.fragmentInstances} classFragment={this.state.classFragment}/>\r\n        </Dialog>\r\n        <Dialog onClose={this.closeModal} open={this.state.sparqlPreview ? true : false} fullWidth={true} maxWidth=\"md\">\r\n          <DialogTitle>\r\n            SPARQL query to get connected class fragments\r\n            <Typography variant=\"subtitle2\">See also <Link href=\"https://github.com/nvbach91/iga-hybrid\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/nvbach91/iga-hybrid</Link></Typography>\r\n          </DialogTitle>\r\n          <pre className={classes.codeBlock}>{getQueryConnectedSchemas(this.state.selectedOption ? this.state.selectedOption.value : '__YOUR_SELECTED_VOCAB__').trim()}</pre>\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nAnalyzerPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AnalyzerPage);\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport { createIriLink } from '../utils';\r\nimport VirtualizedTable from './VirtualizedTable'\r\n\r\nexport default function PrefixesTable({ rows }) {\r\n  const mRows = rows.map((prefix) => {\r\n    const iri = window.prefixes[prefix];\r\n    return { id: prefix, prefix: createIriLink(iri), iri: <Link href={iri} target=\"_blank\" rel=\"noopener noreferrer\">{iri}</Link> };\r\n  })\r\n  return (\r\n    <Paper style={{ height: 400, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={mRows.length}\r\n        rowGetter={({ index }) => mRows[index]}\r\n        columns={[\r\n          {\r\n            width: 200,\r\n            label: 'Prefix',\r\n            dataKey: 'prefix',\r\n          },\r\n          {\r\n            flexGrow: 1,\r\n            width: 0,\r\n            label: 'IRI',\r\n            dataKey: 'iri',\r\n          },\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PrefixesTable from './PrefixesTable';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: 'auto',\r\n    position: 'relative',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  formControl: {\r\n    flexGrow: 1\r\n  },\r\n});\r\nclass PrefixesPage extends React.Component {\r\n  state = {\r\n    searchValue: '',\r\n    rows: Object.keys(window.prefixes),\r\n  }\r\n  handleInputChange = (name) => (e) => {\r\n    this.setState({ \r\n      [name]: e.target.value, \r\n      rows: Object.keys(window.prefixes).filter((prefix) => {\r\n        return prefix.toLowerCase().includes(e.target.value.trim().toLowerCase());\r\n      }) \r\n    });\r\n  }\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n      <Typography align=\"left\" variant=\"h5\">\r\n        Search for prefixes\r\n      </Typography>\r\n      <Typography align=\"left\" variant=\"subtitle2\">\r\n        These prefixes come from <Link href=\"https://prefix.cc/context\">prefix.cc</Link>\r\n      </Typography>\r\n        <Paper className={classes.paper}>\r\n          <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n            <Toolbar>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <SearchIcon className={classes.block} color=\"inherit\" />\r\n                </Grid>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField value={this.state.searchValue} onChange={this.handleInputChange('searchValue')} />\r\n                </FormControl>\r\n              </Grid>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper className={classes.root}>\r\n            <PrefixesTable rows={this.state.rows}/>\r\n          </Paper>\r\n        </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPrefixesPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PrefixesPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = theme => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle, onTabSwitch, tabIndex } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton color=\"inherit\" aria-label=\"Open drawer\" onClick={onDrawerToggle} className={classes.menuButton}>\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts • No alters\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar\r\n                  className={classes.avatar}\r\n                  src=\"favicon.png\"\r\n                  alt=\"avatar\"\r\n                />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                LOV Analyzer\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={tabIndex} textColor=\"inherit\">\r\n          <Tab textColor=\"inherit\" label=\"LOV Analyzer\" onClick={onTabSwitch(0)}/>\r\n          <Tab textColor=\"inherit\" label=\"Prefixes\" onClick={onTabSwitch(1)}/>\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Navigator from './Navigator';\r\nimport AnalyzerPage from './AnalyzerPage';\r\nimport PrefixesPage from './PrefixesPage';\r\nimport Header from './Header';\r\n\r\nlet theme = createMuiTheme({\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#009be5',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        backgroundColor: '#18202c',\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: 'none',\r\n      },\r\n      contained: {\r\n        boxShadow: 'none',\r\n        '&:active': {\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      indicator: {\r\n        height: 3,\r\n        borderTopLeftRadius: 3,\r\n        borderTopRightRadius: 3,\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none',\r\n        margin: '0 16px',\r\n        minWidth: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up('md')]: {\r\n          padding: 0,\r\n          minWidth: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: '#404854',\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color: 'inherit',\r\n        marginRight: 0,\r\n        '& svg': {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      root: {\r\n        width: 32,\r\n        height: 32,\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  mixins: {\r\n    ...theme.mixins,\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 192;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appAnalyzerPage: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  mainAnalyzerPage: {\r\n    flex: 1,\r\n    padding: '48px 36px 0',\r\n    background: '#eaeff1',\r\n  },\r\n};\r\n\r\nclass Paperbase extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n    tabIndex: 0,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n  handleTabSwitch = (tabIndex) => () => {\r\n    this.setState({ tabIndex });\r\n  }\r\n  renderAnalyzerPage = () => {\r\n    switch (this.state.tabIndex) {\r\n      case 0: return <AnalyzerPage />;\r\n      case 1: return <PrefixesPage />;\r\n      default: return <AnalyzerPage />;\r\n    }\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <nav className={classes.drawer}>\r\n            <Hidden smUp implementation=\"js\">\r\n              <Navigator\r\n                PaperProps={{ style: { width: drawerWidth } }}\r\n                variant=\"temporary\"\r\n                open={this.state.mobileOpen}\r\n                onClose={this.handleDrawerToggle}\r\n              />\r\n            </Hidden>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n            </Hidden>\r\n          </nav>\r\n          <div className={classes.appAnalyzerPage}>\r\n            <Header onDrawerToggle={this.handleDrawerToggle} onTabSwitch={this.handleTabSwitch} tabIndex={this.state.tabIndex}/>\r\n            <main className={classes.mainAnalyzerPage}>\r\n              {this.renderAnalyzerPage()}\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nPaperbase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Paperbase);","import React from 'react';\r\nimport Paperbase from './Paperbase';\r\nimport '../css/App.css';\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n  componentWillMount = () => {\r\n    axios.get('https://prefix.cc/context').then((resp) => {\r\n      window.prefixes = resp.data['@context'];\r\n      window.reversePrefixes = {};\r\n      Object.keys(window.prefixes).forEach((prefix) => {\r\n        window.reversePrefixes[window.prefixes[prefix]] = prefix;\r\n      });\r\n    });\r\n  }\r\n  render = () => (\r\n    <div className=\"App\">\r\n      <Paperbase />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css//index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}